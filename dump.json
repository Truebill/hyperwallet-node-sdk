[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Hyperwallet.js",
    "memberof": null,
    "longname": "src/Hyperwallet.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import objectAssign from \"object-assign\";\nimport ApiClient from \"./utils/ApiClient\";\n\n/**\n * The Hyperwallet SDK Client\n */\nexport default class Hyperwallet {\n\n    /**\n     * Create a instance of the SDK Client\n     *\n     * @param {Object} config - The API config\n     * @param {string} config.username - The API username\n     * @param {string} config.password - The API password\n     * @param {string} [config.programToken] - The program token that is used for some API calls\n     * @param {string} [config.server=https://api.sandbox.hyperwallet.com] - The API server to connect to\n     */\n    constructor({ username, password, programToken, server = \"https://api.sandbox.hyperwallet.com\" }) {\n        if (!username || !password) {\n            throw new Error(\"You need to specify your API username and password!\");\n        }\n\n        /**\n         * The instance of the ApiClient\n         *\n         * @type {ApiClient}\n         * @protected\n         */\n        this.client = new ApiClient(username, password, server);\n\n        /**\n         * The program token that is used for some API calls\n         *\n         * @type {string}\n         * @protected\n         */\n        this.programToken = programToken;\n    }\n\n    //--------------------------------------\n    // Users\n    //--------------------------------------\n\n    /**\n     * Create a user\n     *\n     * @param {Object} data - The user data\n     * @param {api-callback} callback - The callback for this call\n     */\n    createUser(data, callback) {\n        this.addProgramToken(data);\n        this.client.doPost(\"users\", data, {}, callback);\n    }\n\n    /**\n     * Load a user\n     *\n     * @param {string} userToken - The user token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    getUser(userToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}`, {}, callback);\n    }\n\n    /**\n     * Update a user\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} data - The user data that should be updated\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    updateUser(userToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.addProgramToken(data);\n        this.client.doPut(`users/${encodeURIComponent(userToken)}`, data, {}, callback);\n    }\n\n    /**\n     * List all users\n     *\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     */\n    listUsers(options, callback) {\n        this.client.doGet(\"users\", options, Hyperwallet.handle204Response(callback));\n    }\n\n    //--------------------------------------\n    // Prepaid Cards\n    //--------------------------------------\n\n    /**\n     * Create a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} data - The prepaid card data\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    createPrepaidCard(userToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards`, data, {}, callback);\n    }\n\n    /**\n     * Get a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    getPrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}`, {}, callback);\n    }\n\n    /**\n     * Update a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {Object} data - The prepaid card data to update\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    updatePrepaidCard(userToken, prepaidCardToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n        this.client.doPut(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}`, data, {}, callback);\n    }\n\n    /**\n     * List all prepaid cards\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken is not provided\n     */\n    listPrepaidCards(userToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/prepaid-cards`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * Suspend a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    suspendPrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        const transition = {\n            transition: \"SUSPENDED\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Unsuspend a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    unsuspendPrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        const transition = {\n            transition: \"UNSUSPENDED\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Mark a prepaid card as lost or stolen\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    lostOrStolenPrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        const transition = {\n            transition: \"LOST_OR_STOLEN\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Deactivate a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    deactivatePrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        const transition = {\n            transition: \"DE_ACTIVATED\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Lock a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    lockPrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        const transition = {\n            transition: \"LOCKED\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Unlock a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    unlockPrepaidCard(userToken, prepaidCardToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        const transition = {\n            transition: \"UNLOCKED\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Create a prepaid card status transition\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {Object} data - The prepaid card status transition data\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    createPrepaidCardStatusTransition(userToken, prepaidCardToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, data, {}, callback);\n    }\n\n    /**\n     * Get a prepaid card status transition\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {string} statusTransitionToken - The prepaid card status transition token\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken, prepaidCardToken or statusTransitionToken is not provided\n     */\n    getPrepaidCardStatusTransition(userToken, prepaidCardToken, statusTransitionToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n        if (!statusTransitionToken) {\n            throw new Error(\"statusTransitionToken is required\");\n        }\n\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions/${encodeURIComponent(statusTransitionToken)}`, {}, callback);\n    }\n\n    /**\n     * List all prepaid card status transitions\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    listPrepaidCardStatusTransitions(userToken, prepaidCardToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/status-transitions`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    //--------------------------------------\n    // Bank Accounts\n    //--------------------------------------\n\n    /**\n     * Create a bank account\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} data - The bank account data\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    createBankAccount(userToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/bank-accounts`, data, {}, callback);\n    }\n\n    /**\n     * Get a bank account\n     *\n     * @param {string} userToken - The user token\n     * @param {string} bankAccountToken - The bank account token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or bankAccountToken is not provided\n     */\n    getBankAccount(userToken, bankAccountToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!bankAccountToken) {\n            throw new Error(\"bankAccountToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/bank-accounts/${encodeURIComponent(bankAccountToken)}`, {}, callback);\n    }\n\n    /**\n     * Update a bank account\n     *\n     * @param {string} userToken - The user token\n     * @param {string} bankAccountToken - The bank account token\n     * @param {Object} data - The bank account data to update\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or bankAccountToken is not provided\n     */\n    updateBankAccount(userToken, bankAccountToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!bankAccountToken) {\n            throw new Error(\"bankAccountToken is required\");\n        }\n        this.client.doPut(`users/${encodeURIComponent(userToken)}/bank-accounts/${encodeURIComponent(bankAccountToken)}`, data, {}, callback);\n    }\n\n    /**\n     * List all bank accounts\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken is not provided\n     */\n    listBankAccounts(userToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/bank-accounts`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * Deactivate a bank account\n     *\n     * @param {string} userToken - The user token\n     * @param {string} bankAccountToken - The bank account token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or bankAccountToken is not provided\n     */\n    deactivateBankAccount(userToken, bankAccountToken, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!bankAccountToken) {\n            throw new Error(\"bankAccountToken is required\");\n        }\n\n        const transition = {\n            transition: \"DE-ACTIVATED\",\n        };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/bank-accounts/${encodeURIComponent(bankAccountToken)}/status-transitions`, transition, {}, callback);\n    }\n\n    /**\n     * Create a bank account status transition\n     *\n     * @param {string} userToken - The user token\n     * @param {string} bankAccountToken - The bank account token\n     * @param {Object} data - The bank account status transition data\n     * @param {api-callback} callback - The callback for this call\n     * @throws Will throw an error if userToken or bankAccountToken is not provided\n     */\n    createBankAccountStatusTransition(userToken, bankAccountToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!bankAccountToken) {\n            throw new Error(\"bankAccountToken is required\");\n        }\n\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/bank-accounts/${encodeURIComponent(bankAccountToken)}/status-transitions`, data, {}, callback);\n    }\n\n    /**\n     * List all bank account status transitions\n     *\n     * @param {string} userToken - The user token\n     * @param {string} bankAccountToken - The bank account token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or bankAccountToken is not provided\n     */\n    listBankAccountStatusTransitions(userToken, bankAccountToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!bankAccountToken) {\n            throw new Error(\"bankAccountToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/bank-accounts/${encodeURIComponent(bankAccountToken)}/status-transitions`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    //--------------------------------------\n    // Balances\n    //--------------------------------------\n\n    /**\n     * List balances for a user\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    listBalancesForUser(userToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/balances`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * List balances for a prepaid card\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    listBalancesForPrepaidCard(userToken, prepaidCardToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/balances`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * List balances for a program accounts\n     *\n     * @param {string} programToken - The program token\n     * @param {string} accountToken - The account token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if programToken or accountToken is not provided\n     */\n    listBalancesForAccount(programToken, accountToken, options, callback) {\n        if (!programToken) {\n            throw new Error(\"programToken is required\");\n        }\n        if (!accountToken) {\n            throw new Error(\"accountToken is required\");\n        }\n        this.client.doGet(`programs/${encodeURIComponent(programToken)}/accounts/${encodeURIComponent(accountToken)}/balances`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    //--------------------------------------\n    // Payments\n    //--------------------------------------\n\n    /**\n     * Create a payment\n     *\n     * @param {Object} data - The payment data\n     * @param {api-callback} callback - The callback for this call\n     */\n    createPayment(data, callback) {\n        this.addProgramToken(data);\n        this.client.doPost(\"payments\", data, {}, callback);\n    }\n\n    /**\n     * Get a payment\n     *\n     * @param {string} paymentToken - The payment token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if paymentToken is not provided\n     */\n    getPayment(paymentToken, callback) {\n        if (!paymentToken) {\n            throw new Error(\"paymentToken is required\");\n        }\n        this.client.doGet(`payments/${encodeURIComponent(paymentToken)}`, {}, callback);\n    }\n\n    /**\n     * List all payments\n     *\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     */\n    listPayments(options, callback) {\n        this.client.doGet(\"payments\", options, Hyperwallet.handle204Response(callback));\n    }\n\n    //--------------------------------------\n    // Programs\n    //--------------------------------------\n\n    /**\n     * Get a program\n     *\n     * @param {string} programToken - The program token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if programToken is not provided\n     */\n    getProgram(programToken, callback) {\n        if (!programToken) {\n            throw new Error(\"programToken is required\");\n        }\n        this.client.doGet(`programs/${encodeURIComponent(programToken)}`, {}, callback);\n    }\n\n    //--------------------------------------\n    // Program Accounts\n    //--------------------------------------\n\n    /**\n     * Get a program account\n     *\n     * @param {string} programToken - The program token\n     * @param {string} accountToken - The account token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if programToken is not provided\n     */\n    getProgramAccount(programToken, accountToken, callback) {\n        if (!programToken) {\n            throw new Error(\"programToken is required\");\n        }\n        if (!accountToken) {\n            throw new Error(\"accountToken is required\");\n        }\n        this.client.doGet(`programs/${encodeURIComponent(programToken)}/accounts/${encodeURIComponent(accountToken)}`, {}, callback);\n    }\n\n\n    //--------------------------------------\n    // Transfer Method Configurations\n    //--------------------------------------\n\n    /**\n     * Get a transfer method configuration\n     *\n     * @param {string} userToken - The user token\n     * @param {string} country - The transfer method country\n     * @param {string} currency - The transfer method currency\n     * @param {string} type - The transfer method type\n     * @param {string} profileType - The profile type\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken, country, currency, type or profileType is not provided\n     */\n    getTransferMethodConfiguration(userToken, country, currency, type, profileType, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!country) {\n            throw new Error(\"country is required\");\n        }\n        if (!currency) {\n            throw new Error(\"currency is required\");\n        }\n        if (!type) {\n            throw new Error(\"type is required\");\n        }\n        if (!profileType) {\n            throw new Error(\"profileType is required\");\n        }\n        this.client.doGet(\"transfer-method-configurations\", {\n            userToken,\n            country,\n            currency,\n            type,\n            profileType,\n        }, callback);\n    }\n\n    /**\n     * List all transfer method configurations\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    listTransferMethodConfigurations(userToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        const params = options ? objectAssign({}, options, { userToken }) : { userToken };\n        this.client.doGet(\"transfer-method-configurations\", params, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * Create a transfer method\n     *\n     * @param {string} userToken The user token\n     * @param {string} jsonCacheToken The json cache token supplied by the widget\n     * @param {Object} data - Transfer method data\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     * @throws Will throw an error if jsonCacheToken is not provided\n     */\n    createTransferMethod(userToken, jsonCacheToken, data, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n\n        if (!jsonCacheToken) {\n            throw new Error(\"jsonCacheToken is required\");\n        }\n\n        const headers = { \"Json-Cache-Token\": jsonCacheToken };\n        this.client.doPost(`users/${encodeURIComponent(userToken)}/transfer-methods`, data, headers, callback);\n    }\n\n    //--------------------------------------\n    // Receipts\n    //--------------------------------------\n\n    /**\n     * List all program account receipts\n     *\n     * @param {string} programToken - The program token\n     * @param {string} accountToken - The account token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if programToken or accountToken is not provided\n     */\n    listReceiptsForProgramAccount(programToken, accountToken, options, callback) {\n        if (!programToken) {\n            throw new Error(\"programToken is required\");\n        }\n        if (!accountToken) {\n            throw new Error(\"accountToken is required\");\n        }\n        this.client.doGet(`programs/${encodeURIComponent(programToken)}/accounts/${encodeURIComponent(accountToken)}/receipts`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * List all user receipts\n     *\n     * @param {string} userToken - The user token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken is not provided\n     */\n    listReceiptsForUser(userToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/receipts`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * List all prepaid card receipts\n     *\n     * @param {string} userToken - The user token\n     * @param {string} prepaidCardToken - The prepaid card token\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if userToken or prepaidCardToken is not provided\n     */\n    listReceiptsForPrepaidCard(userToken, prepaidCardToken, options, callback) {\n        if (!userToken) {\n            throw new Error(\"userToken is required\");\n        }\n        if (!prepaidCardToken) {\n            throw new Error(\"prepaidCardToken is required\");\n        }\n        this.client.doGet(`users/${encodeURIComponent(userToken)}/prepaid-cards/${encodeURIComponent(prepaidCardToken)}/receipts`, options, Hyperwallet.handle204Response(callback));\n    }\n\n    //--------------------------------------\n    // Webhooks: Notifications\n    //-------------------------------------\n\n    /**\n     * List webhook notifications\n     *\n     * @param {Object} options - The query parameters to send\n     * @param {api-callback} callback - The callback for this call\n     */\n    listWebhookNotifications(options, callback) {\n        this.client.doGet(\"webhook-notifications\", options, Hyperwallet.handle204Response(callback));\n    }\n\n    /**\n     * Get a single webhook notification\n     *\n     * @param {string} webhookToken - Webhook token\n     * @param {api-callback} callback - The callback for this call\n     *\n     * @throws Will throw an error if webhookToken is not provided\n     */\n    getWebhookNotification(webhookToken, callback) {\n        if (!webhookToken) {\n            throw new Error(\"webhookToken is required\");\n        }\n        this.client.doGet(`webhook-notifications/${encodeURIComponent(webhookToken)}`, {}, callback);\n    }\n\n    //--------------------------------------\n    // Internal utils\n    //--------------------------------------\n\n    /**\n     * Add program token to data object if not already set\n     *\n     * @param {Object} data - The data object\n     * @returns {Object} - The adjusted object\n     *\n     * @private\n     */\n    addProgramToken(data) {\n        if (!data || !this.programToken) {\n            return data;\n        }\n        if (data.programToken) {\n            return data;\n        }\n\n        data.programToken = this.programToken; // eslint-disable-line no-param-reassign\n        return data;\n    }\n\n    /**\n     * Handle 204 response for list calls\n     *\n     * @param {api-callback} callback - The api callback\n     * @returns {api-callback} - A wrapper api callback\n     *\n     * @private\n     */\n    static handle204Response(callback) {\n        return (err, data, res) => {\n            if (!err && res.status === 204) {\n                callback(err, {\n                    count: 0,\n                    data: [],\n                }, res);\n                return;\n            }\n            callback(err, data, res);\n        };\n    }\n\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Hyperwallet",
    "memberof": "src/Hyperwallet.js",
    "longname": "src/Hyperwallet.js~Hyperwallet",
    "access": null,
    "export": true,
    "importPath": "hyperwallet-sdk/lib/Hyperwallet.js",
    "importStyle": "Hyperwallet",
    "description": "The Hyperwallet SDK Client",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#constructor",
    "access": null,
    "description": "Create a instance of the SDK Client",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "The API config"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.username",
        "description": "The API username"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.password",
        "description": "The API password"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "config.programToken",
        "description": "The program token that is used for some API calls"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "https://api.sandbox.hyperwallet.com",
        "defaultRaw": "https://api.sandbox.hyperwallet.com",
        "name": "config.server",
        "description": "The API server to connect to"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "client",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#client",
    "access": "protected",
    "description": "The instance of the ApiClient",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "ApiClient"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "programToken",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#programToken",
    "access": "protected",
    "description": "The program token that is used for some API calls",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createUser",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createUser",
    "access": null,
    "description": "Create a user",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUser",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getUser",
    "access": null,
    "description": "Load a user",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateUser",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#updateUser",
    "access": null,
    "description": "Update a user",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The user data that should be updated"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listUsers",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listUsers",
    "access": null,
    "description": "List all users",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 9,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createPrepaidCard",
    "access": null,
    "description": "Create a prepaid card",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The prepaid card data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getPrepaidCard",
    "access": null,
    "description": "Get a prepaid card",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updatePrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#updatePrepaidCard",
    "access": null,
    "description": "Update a prepaid card",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The prepaid card data to update"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listPrepaidCards",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listPrepaidCards",
    "access": null,
    "description": "List all prepaid cards",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "suspendPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#suspendPrepaidCard",
    "access": null,
    "description": "Suspend a prepaid card",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unsuspendPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#unsuspendPrepaidCard",
    "access": null,
    "description": "Unsuspend a prepaid card",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "lostOrStolenPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#lostOrStolenPrepaidCard",
    "access": null,
    "description": "Mark a prepaid card as lost or stolen",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deactivatePrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#deactivatePrepaidCard",
    "access": null,
    "description": "Deactivate a prepaid card",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "lockPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#lockPrepaidCard",
    "access": null,
    "description": "Lock a prepaid card",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unlockPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#unlockPrepaidCard",
    "access": null,
    "description": "Unlock a prepaid card",
    "lineNumber": 289,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createPrepaidCardStatusTransition",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createPrepaidCardStatusTransition",
    "access": null,
    "description": "Create a prepaid card status transition",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The prepaid card status transition data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPrepaidCardStatusTransition",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getPrepaidCardStatusTransition",
    "access": null,
    "description": "Get a prepaid card status transition",
    "lineNumber": 332,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "statusTransitionToken",
        "description": "The prepaid card status transition token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken, prepaidCardToken or statusTransitionToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listPrepaidCardStatusTransitions",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listPrepaidCardStatusTransitions",
    "access": null,
    "description": "List all prepaid card status transitions",
    "lineNumber": 355,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createBankAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createBankAccount",
    "access": null,
    "description": "Create a bank account",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The bank account data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getBankAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getBankAccount",
    "access": null,
    "description": "Get a bank account",
    "lineNumber": 394,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bankAccountToken",
        "description": "The bank account token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or bankAccountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateBankAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#updateBankAccount",
    "access": null,
    "description": "Update a bank account",
    "lineNumber": 414,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bankAccountToken",
        "description": "The bank account token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The bank account data to update"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or bankAccountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listBankAccounts",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listBankAccounts",
    "access": null,
    "description": "List all bank accounts",
    "lineNumber": 432,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deactivateBankAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#deactivateBankAccount",
    "access": null,
    "description": "Deactivate a bank account",
    "lineNumber": 448,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bankAccountToken",
        "description": "The bank account token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or bankAccountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createBankAccountStatusTransition",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createBankAccountStatusTransition",
    "access": null,
    "description": "Create a bank account status transition",
    "lineNumber": 471,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bankAccountToken",
        "description": "The bank account token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The bank account status transition data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or bankAccountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listBankAccountStatusTransitions",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listBankAccountStatusTransitions",
    "access": null,
    "description": "List all bank account status transitions",
    "lineNumber": 492,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bankAccountToken",
        "description": "The bank account token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or bankAccountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listBalancesForUser",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listBalancesForUser",
    "access": null,
    "description": "List balances for a user",
    "lineNumber": 515,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listBalancesForPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listBalancesForPrepaidCard",
    "access": null,
    "description": "List balances for a prepaid card",
    "lineNumber": 532,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listBalancesForAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listBalancesForAccount",
    "access": null,
    "description": "List balances for a program accounts",
    "lineNumber": 552,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "programToken",
        "description": "The program token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accountToken",
        "description": "The account token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if programToken or accountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createPayment",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createPayment",
    "access": null,
    "description": "Create a payment",
    "lineNumber": 572,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The payment data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPayment",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getPayment",
    "access": null,
    "description": "Get a payment",
    "lineNumber": 585,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "paymentToken",
        "description": "The payment token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if paymentToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listPayments",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listPayments",
    "access": null,
    "description": "List all payments",
    "lineNumber": 598,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getProgram",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getProgram",
    "access": null,
    "description": "Get a program",
    "lineNumber": 614,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "programToken",
        "description": "The program token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if programToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getProgramAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getProgramAccount",
    "access": null,
    "description": "Get a program account",
    "lineNumber": 634,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "programToken",
        "description": "The program token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accountToken",
        "description": "The account token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if programToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTransferMethodConfiguration",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getTransferMethodConfiguration",
    "access": null,
    "description": "Get a transfer method configuration",
    "lineNumber": 661,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "country",
        "description": "The transfer method country"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "currency",
        "description": "The transfer method currency"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The transfer method type"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "profileType",
        "description": "The profile type"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken, country, currency, type or profileType is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listTransferMethodConfigurations",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listTransferMethodConfigurations",
    "access": null,
    "description": "List all transfer method configurations",
    "lineNumber": 695,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createTransferMethod",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#createTransferMethod",
    "access": null,
    "description": "Create a transfer method",
    "lineNumber": 714,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "jsonCacheToken",
        "description": "The json cache token supplied by the widget"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Transfer method data"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      },
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if jsonCacheToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listReceiptsForProgramAccount",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listReceiptsForProgramAccount",
    "access": null,
    "description": "List all program account receipts",
    "lineNumber": 741,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "programToken",
        "description": "The program token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accountToken",
        "description": "The account token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if programToken or accountToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listReceiptsForUser",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listReceiptsForUser",
    "access": null,
    "description": "List all user receipts",
    "lineNumber": 760,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listReceiptsForPrepaidCard",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listReceiptsForPrepaidCard",
    "access": null,
    "description": "List all prepaid card receipts",
    "lineNumber": 777,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userToken",
        "description": "The user token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepaidCardToken",
        "description": "The prepaid card token"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if userToken or prepaidCardToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listWebhookNotifications",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#listWebhookNotifications",
    "access": null,
    "description": "List webhook notifications",
    "lineNumber": 797,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The query parameters to send"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getWebhookNotification",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#getWebhookNotification",
    "access": null,
    "description": "Get a single webhook notification",
    "lineNumber": 809,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "webhookToken",
        "description": "Webhook token"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Will throw an error if webhookToken is not provided"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addProgramToken",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet#addProgramToken",
    "access": "private",
    "description": "Add program token to data object if not already set",
    "lineNumber": 828,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - The adjusted object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The adjusted object"
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "handle204Response",
    "memberof": "src/Hyperwallet.js~Hyperwallet",
    "longname": "src/Hyperwallet.js~Hyperwallet.handle204Response",
    "access": "private",
    "description": "Handle 204 response for list calls",
    "lineNumber": 848,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{api-callback} - A wrapper api callback"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The api callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "api-callback"
      ],
      "spread": false,
      "description": "A wrapper api callback"
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Hyperwallet from \"./Hyperwallet\";\n\nmodule.exports = Hyperwallet;\n"
  },
  {
    "__docId__": 48,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/ApiClient.js",
    "memberof": null,
    "longname": "src/utils/ApiClient.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import request from \"superagent\";\nimport packageJson from \"../../package.json\";\n\n/**\n * The callback interface for api calls\n *\n * @typedef {function} api-callback\n * @param {Object[]} [errors] - In case of an error an array with error objects otherwise undefined\n * @param {string} [errors[].fieldName] - The field name (if error is caused by a particular field)\n * @param {string} errors[].message - The error message\n * @param {string} errors[].code - The error code\n * @param {Object} data - The rest response body\n * @param {Object} res - The raw superagent response object\n */\n\n/**\n * The Hyperwallet API Client\n */\nexport default class ApiClient {\n\n    /**\n     * Create a instance of the API client\n     *\n     * @param {string} username - The API username\n     * @param {string} password - The API password\n     * @param {string} server - The API server to connect to\n     */\n    constructor(username, password, server) {\n        /**\n         * The API username\n         *\n         * @type {string}\n         * @protected\n         */\n        this.username = username;\n\n        /**\n         * The API password\n         *\n         * @type {string}\n         * @protected\n         */\n        this.password = password;\n\n        /**\n         * The API server to connect to\n         * @type {string}\n         * @protected\n         */\n        this.server = server;\n\n        /**\n         * The Node SDK Version number\n         *\n         * @type {string}\n         * @protected\n         */\n        this.version = packageJson.version;\n    }\n\n    /**\n     * Do a POST call to the Hyperwallet API server\n     *\n     * @param {string} partialUrl - The api endpoint to call (gets prefixed by `server` and `/rest/v3/`)\n     * @param {Object} data - The data to send to the server\n     * @param {Object} params - Query parameters to send in this call\n     * @param {api-callback} callback - The callback for this call\n     */\n    doPost(partialUrl, data, params, callback) {\n        request\n            .post(`${this.server}/rest/v3/${partialUrl}`)\n            .auth(this.username, this.password)\n            .set(\"User-Agent\", `Hyperwallet Node SDK v${this.version}`)\n            .type(\"json\")\n            .accept(\"json\")\n            .query(params)\n            .send(data)\n            .end(this.wrapCallback(callback));\n    }\n\n    /**\n     * Do a PUT call to the Hyperwallet API server\n     *\n     * @param {string} partialUrl - The api endpoint to call (gets prefixed by `server` and `/rest/v3/`)\n     * @param {Object} data - The data to send to the server\n     * @param {Object} params - Query parameters to send in this call\n     * @param {api-callback} callback - The callback for this call\n     */\n    doPut(partialUrl, data, params, callback) {\n        request\n            .put(`${this.server}/rest/v3/${partialUrl}`)\n            .auth(this.username, this.password)\n            .set(\"User-Agent\", `Hyperwallet Node SDK v${this.version}`)\n            .type(\"json\")\n            .accept(\"json\")\n            .query(params)\n            .send(data)\n            .end(this.wrapCallback(callback));\n    }\n\n    /**\n     * Do a GET call to the Hyperwallet API server\n     *\n     * @param {string} partialUrl - The api endpoint to call (gets prefixed by `server` and `/rest/v3/`)\n     * @param {Object} params - Query parameters to send in this call\n     * @param {api-callback} callback - The callback for this call\n     */\n    doGet(partialUrl, params, callback) {\n        request\n            .get(`${this.server}/rest/v3/${partialUrl}`)\n            .auth(this.username, this.password)\n            .set(\"User-Agent\", `Hyperwallet Node SDK v${this.version}`)\n            .accept(\"json\")\n            .query(params)\n            .end(this.wrapCallback(callback));\n    }\n\n    /**\n     * Wrap a callback to process possible API and network errors\n     *\n     * @param {api-callback} callback - The final callback\n     * @returns {function(err: Object, res: Object)} - The super agent callback\n     *\n     * @private\n     */\n    wrapCallback(callback = () => null) {\n        return (err, res) => {\n            if (!err) {\n                callback(undefined, res.body, res);\n                return;\n            }\n\n            let errors = [\n                {\n                    message: `Could not communicate with ${this.server}`,\n                    code: \"COMMUNICATION_ERROR\",\n                },\n            ];\n            if (res && res.body && res.body.errors) {\n                errors = res.body.errors;\n            }\n            callback(errors, res ? res.body : undefined, res);\n        };\n    }\n\n}\n"
  },
  {
    "__docId__": 49,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "api-callback",
    "memberof": "src/utils/ApiClient.js",
    "longname": "src/utils/ApiClient.js~api-callback",
    "access": null,
    "description": "The callback interface for api calls",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "errors",
        "description": "In case of an error an array with error objects otherwise undefined"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "errors[].fieldName",
        "description": "The field name (if error is caused by a particular field)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "errors[].message",
        "description": "The error message"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "errors[].code",
        "description": "The error code"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The rest response body"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The raw superagent response object"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "api-callback"
    }
  },
  {
    "__docId__": 50,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ApiClient",
    "memberof": "src/utils/ApiClient.js",
    "longname": "src/utils/ApiClient.js~ApiClient",
    "access": null,
    "export": true,
    "importPath": "hyperwallet-sdk/lib/utils/ApiClient.js",
    "importStyle": "ApiClient",
    "description": "The Hyperwallet API Client",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#constructor",
    "access": null,
    "description": "Create a instance of the API client",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "The API username"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The API password"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "server",
        "description": "The API server to connect to"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "username",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#username",
    "access": "protected",
    "description": "The API username",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "password",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#password",
    "access": "protected",
    "description": "The API password",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "server",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#server",
    "access": "protected",
    "description": "The API server to connect to",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "version",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#version",
    "access": "protected",
    "description": "The Node SDK Version number",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "doPost",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#doPost",
    "access": null,
    "description": "Do a POST call to the Hyperwallet API server",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "partialUrl",
        "description": "The api endpoint to call (gets prefixed by `server` and `/rest/v3/`)"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to send to the server"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Query parameters to send in this call"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "doPut",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#doPut",
    "access": null,
    "description": "Do a PUT call to the Hyperwallet API server",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "partialUrl",
        "description": "The api endpoint to call (gets prefixed by `server` and `/rest/v3/`)"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to send to the server"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Query parameters to send in this call"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "doGet",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#doGet",
    "access": null,
    "description": "Do a GET call to the Hyperwallet API server",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "partialUrl",
        "description": "The api endpoint to call (gets prefixed by `server` and `/rest/v3/`)"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Query parameters to send in this call"
      },
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback for this call"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "wrapCallback",
    "memberof": "src/utils/ApiClient.js~ApiClient",
    "longname": "src/utils/ApiClient.js~ApiClient#wrapCallback",
    "access": "private",
    "description": "Wrap a callback to process possible API and network errors",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function(err: Object, res: Object)} - The super agent callback"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "api-callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The final callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(err: Object, res: Object)"
      ],
      "spread": false,
      "description": "The super agent callback"
    },
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/Hyperwallet.spec.js",
    "memberof": null,
    "longname": "test/Hyperwallet.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai, { expect } from \"chai\";\nimport dirtyChai from \"dirty-chai\";\nimport sinon from \"sinon\";\nimport sinonChai from \"sinon-chai\";\n\nimport Hyperwallet from \"../src/Hyperwallet\";\n\nchai.should();\nchai.use(dirtyChai);\nchai.use(sinonChai);\n\n/** @test {Hyperwallet} */\ndescribe(\"Hyperwallet\", () => {\n    /** @test {Hyperwallet#constructor} */\n    describe(\"constructor()\", () => {\n        /** @test {Hyperwallet#constructor} */\n        it(\"should initialize ApiClient with default server\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n\n            client.client.username.should.be.equal(\"test-username\");\n            client.client.password.should.be.equal(\"test-password\");\n            client.client.server.should.be.equal(\"https://api.sandbox.hyperwallet.com\");\n        });\n\n        /** @test {Hyperwallet#constructor} */\n        it(\"should set programToken to undefined if not provided\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n\n            expect(client.programToken).to.be.undefined();\n        });\n\n        /** @test {Hyperwallet#constructor} */\n        it(\"should set programToken if provided\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n                programToken: \"test-program-token\",\n            });\n\n            client.programToken.should.be.equal(\"test-program-token\");\n        });\n\n        /** @test {Hyperwallet#constructor} */\n        it(\"should initialize ApiClient with provided server\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n                server: \"test-server\",\n            });\n\n            client.client.server.should.be.equal(\"test-server\");\n        });\n\n        /** @test {Hyperwallet#constructor} */\n        it(\"should throw error if username is missing\", () => {\n            expect(() => new Hyperwallet({\n                password: \"test-password\",\n            })).to.throw(\"You need to specify your API username and password!\");\n        });\n\n        /** @test {Hyperwallet#constructor} */\n        it(\"should throw error if password is missing\", () => {\n            expect(() => new Hyperwallet({\n                username: \"test-username\",\n            })).to.throw(\"You need to specify your API username and password!\");\n        });\n\n        /** @test {Hyperwallet#constructor} */\n        it(\"should throw error if username and password is missing\", () => {\n            expect(() => new Hyperwallet({\n            })).to.throw(\"You need to specify your API username and password!\");\n        });\n    });\n\n    //--------------------------------------\n    // TLS verification\n    //--------------------------------------\n\n    describe(\"listUsers()\", () => {\n        it(\"should not have any TLS issues\", (cb) => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.listUsers({}, (err, body, res) => {\n                res.status.should.be.equal(401);\n                cb();\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Users\n    //--------------------------------------\n\n    /** @test {Hyperwallet#createUser} */\n    describe(\"createUser()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createUser} */\n        it(\"should do post call to users endpoint without programToken added\", () => {\n            const callback = () => null;\n            client.createUser({\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n\n        /** @test {Hyperwallet#createUser} */\n        it(\"should do post call to users endpoint with programToken added\", () => {\n            client.programToken = \"test-program-token\";\n\n            const callback = () => null;\n            client.createUser({\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users\", {\n                test: \"value\",\n                programToken: \"test-program-token\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#getUser} */\n    describe(\"getUser()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getUser} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getUser(undefined, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#getUser} */\n        it(\"should do get call if userToken is provided\", () => {\n            const callback = () => null;\n            client.getUser(\"test-user-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token\", {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#updateUser} */\n    describe(\"updateUser()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPut: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#updateUser} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.updateUser(undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#updateUser} */\n        it(\"should do put call to users endpoint without programToken added\", () => {\n            const callback = () => null;\n            client.updateUser(\"test-user-token\", {\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n\n        /** @test {Hyperwallet#updateUser} */\n        it(\"should do put call to users endpoint with programToken added\", () => {\n            client.programToken = \"test-program-token\";\n\n            const callback = () => null;\n            client.updateUser(\"test-user-token\", {\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token\", {\n                test: \"value\",\n                programToken: \"test-program-token\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listUsers} */\n    describe(\"listUsers()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listUsers} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listUsers({ test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listUsers} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listUsers({}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users\", {});\n        });\n\n        /** @test {Hyperwallet#listUsers} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listUsers({}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Prepaid Cards\n    //--------------------------------------\n\n    /** @test {Hyperwallet#createPrepaidCard} */\n    describe(\"createPrepaidCard()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createPrepaidCard} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.createPrepaidCard(undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#createPrepaidCard} */\n        it(\"should do post call to prepaid cards endpoint\", () => {\n            const callback = () => null;\n            client.createPrepaidCard(\"test-user-token\", {\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#getPrepaidCard} */\n    describe(\"getPrepaidCard()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getPrepaidCard} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getPrepaidCard(undefined, undefined, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#getPrepaidCard} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getPrepaidCard(\"test-user-token\", undefined, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#getPrepaidCard} */\n        it(\"should do get call if userToken and prepaidCardToken is provided\", () => {\n            const callback = () => null;\n            client.getPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token\", {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#updatePrepaidCard} */\n    describe(\"updatePrepaidCard()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPut: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#updatePrepaidCard} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.updatePrepaidCard(undefined, undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#updatePrepaidCard} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.updatePrepaidCard(\"test-user-token\", undefined, { test: \"value\" }, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#updatePrepaidCard} */\n        it(\"should do put call to prepaid cards endpoint\", () => {\n            const callback = () => null;\n            client.updatePrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", {\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listPrepaidCards} */\n    describe(\"listPrepaidCards()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listPrepaidCards} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listPrepaidCards(undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listPrepaidCards} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listPrepaidCards(\"test-user-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listPrepaidCards} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listPrepaidCards(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards\", {});\n        });\n\n        /** @test {Hyperwallet#listPrepaidCards} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listPrepaidCards(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    const PREPAID_CARD_STATUS_CHANGE_METHODS = {\n        suspend: \"SUSPENDED\",\n        unsuspend: \"UNSUSPENDED\",\n        lostOrStolen: \"LOST_OR_STOLEN\",\n        deactivate: \"DE_ACTIVATED\",\n        lock: \"LOCKED\",\n        unlock: \"UNLOCKED\",\n    };\n    Object.keys(PREPAID_CARD_STATUS_CHANGE_METHODS).forEach((method) => {\n        const methodName = `${method}PrepaidCard`;\n\n        describe(`${methodName}()`, () => {\n            let client;\n            let apiClientSpy;\n\n            beforeEach(() => {\n                apiClientSpy = sinon.spy();\n                client = new Hyperwallet({\n                    username: \"test-username\",\n                    password: \"test-password\",\n                });\n                client.client = {\n                    doPost: apiClientSpy,\n                };\n            });\n\n            /**\n             * @test {Hyperwallet#suspendPrepaidCard}\n             * @test {Hyperwallet#unsuspendPrepaidCard}\n             * @test {Hyperwallet#lostOrStolenPrepaidCard}\n             * @test {Hyperwallet#deactivatePrepaidCard}\n             * @test {Hyperwallet#lockPrepaidCard}\n             * @test {Hyperwallet#unlockPrepaidCard}\n             */\n            it(\"should throw error if userToken is missing\", () => {\n                const callback = () => null;\n                expect(() => client[methodName](undefined, undefined, callback)).to.throw(\"userToken is required\");\n            });\n\n            /**\n             * @test {Hyperwallet#suspendPrepaidCard}\n             * @test {Hyperwallet#unsuspendPrepaidCard}\n             * @test {Hyperwallet#lostOrStolenPrepaidCard}\n             * @test {Hyperwallet#deactivatePrepaidCard}\n             * @test {Hyperwallet#lockPrepaidCard}\n             * @test {Hyperwallet#unlockPrepaidCard}\n             */\n            it(\"should throw error if prepaidCardToken is missing\", () => {\n                const callback = () => null;\n                expect(() => client[methodName](\"test-user-token\", undefined, callback)).to.throw(\"prepaidCardToken is required\");\n            });\n\n            /**\n             * @test {Hyperwallet#suspendPrepaidCard}\n             * @test {Hyperwallet#unsuspendPrepaidCard}\n             * @test {Hyperwallet#lostOrStolenPrepaidCard}\n             * @test {Hyperwallet#deactivatePrepaidCard}\n             * @test {Hyperwallet#lockPrepaidCard}\n             * @test {Hyperwallet#unlockPrepaidCard}\n             */\n            it(`should send transition to '${PREPAID_CARD_STATUS_CHANGE_METHODS[method]}'`, () => {\n                const callback = () => null;\n                client[methodName](\"test-user-token\", \"test-prepaid-card-token\", callback);\n\n                apiClientSpy.should.have.been.calledOnce();\n                apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/status-transitions\", {\n                    transition: PREPAID_CARD_STATUS_CHANGE_METHODS[method],\n                }, {}, callback);\n            });\n        });\n    });\n\n    /** @test {Hyperwallet#createPrepaidCardStatusTransition} */\n    describe(\"createPrepaidCardStatusTransition()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createPrepaidCardStatusTransition} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.createPrepaidCardStatusTransition(undefined, undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#createPrepaidCardStatusTransition} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.createPrepaidCardStatusTransition(\"test-user-token\", undefined, { test: \"value\" }, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#createPrepaidCardStatusTransition} */\n        it(\"should send post call to prepaid card status transition endpoint\", () => {\n            const callback = () => null;\n            client.createPrepaidCardStatusTransition(\"test-user-token\", \"test-prepaid-card-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/status-transitions\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#getPrepaidCardStatusTransition} */\n    describe(\"getPrepaidCardStatusTransition()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getPrepaidCardStatusTransition} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getPrepaidCardStatusTransition(undefined, undefined, undefined, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#getPrepaidCardStatusTransition} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getPrepaidCardStatusTransition(\"test-user-token\", undefined, undefined, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#getPrepaidCardStatusTransition} */\n        it(\"should throw error if statusTransitionToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getPrepaidCardStatusTransition(\"test-user-token\", \"test-prepaid-card-token\", undefined, callback)).to.throw(\"statusTransitionToken is required\");\n        });\n\n        /** @test {Hyperwallet#getPrepaidCardStatusTransition} */\n        it(\"should do get call if userToken, prepaidCardToken and statusTransitionToken is provided\", () => {\n            const callback = () => null;\n            client.getPrepaidCardStatusTransition(\"test-user-token\", \"test-prepaid-card-token\", \"status-transition-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/status-transitions/status-transition-token\", {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listPrepaidCardStatusTransitions} */\n    describe(\"listPrepaidCardStatusTransitions()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listPrepaidCardStatusTransitions} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listPrepaidCardStatusTransitions(undefined, undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listPrepaidCardStatusTransitions} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listPrepaidCardStatusTransitions(\"test-user-token\", undefined, {}, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#listPrepaidCardStatusTransitions} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listPrepaidCardStatusTransitions(\"test-user-token\", \"test-prepaid-card-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/status-transitions\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listPrepaidCardStatusTransitions} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listPrepaidCardStatusTransitions(\"test-user-token\", \"test-prepaid-card-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/status-transitions\", {});\n        });\n\n        /** @test {Hyperwallet#listPrepaidCardStatusTransitions} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listPrepaidCardStatusTransitions(\"test-user-token\", \"test-prepaid-card-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/status-transitions\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Bank Accounts\n    //--------------------------------------\n\n    /** @test {Hyperwallet#createBankAccount} */\n    describe(\"createBankAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createBankAccount} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.createBankAccount(undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#createBankAccount} */\n        it(\"should do post call to bank accounts endpoint\", () => {\n            const callback = () => null;\n            client.createBankAccount(\"test-user-token\", {\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#getBankAccount} */\n    describe(\"getBankAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getBankAccount} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getBankAccount(undefined, undefined, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#getBankAccount} */\n        it(\"should throw error if bankAccountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getBankAccount(\"test-user-token\", undefined, callback)).to.throw(\"bankAccountToken is required\");\n        });\n\n        /** @test {Hyperwallet#getBankAccount} */\n        it(\"should do get call if userToken and bankAccountToken is provided\", () => {\n            const callback = () => null;\n            client.getBankAccount(\"test-user-token\", \"test-bank-account-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token\", {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#updateBankAccount} */\n    describe(\"updateBankAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPut: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#updateBankAccount} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.updateBankAccount(undefined, undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#updateBankAccount} */\n        it(\"should throw error if bankAccountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.updateBankAccount(\"test-user-token\", undefined, { test: \"value\" }, callback)).to.throw(\"bankAccountToken is required\");\n        });\n\n        /** @test {Hyperwallet#updateBankAccount} */\n        it(\"should do put call to bank accounts endpoint\", () => {\n            const callback = () => null;\n            client.updateBankAccount(\"test-user-token\", \"test-bank-account-token\", {\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listBankAccounts} */\n    describe(\"listBankAccounts()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listBankAccounts} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBankAccounts(undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBankAccounts} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listBankAccounts(\"test-user-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listBankAccounts} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listBankAccounts(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts\", {});\n        });\n\n        /** @test {Hyperwallet#listBankAccounts} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listBankAccounts(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    /** @test {Hyperwallet#deactivateBankAccount} */\n    describe(\"deactivateBankAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#deactivateBankAccount} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.deactivateBankAccount(undefined, undefined, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#deactivateBankAccount} */\n        it(\"should throw error if bankAccountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.deactivateBankAccount(\"test-user-token\", undefined, callback)).to.throw(\"bankAccountToken is required\");\n        });\n\n        /** @test {Hyperwallet#deactivateBankAccount} */\n        it(\"should send transition to 'DE-ACTIVATED'\", () => {\n            const callback = () => null;\n            client.deactivateBankAccount(\"test-user-token\", \"test-bank-account-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token/status-transitions\", {\n                transition: \"DE-ACTIVATED\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#createBankAccountStatusTransition} */\n    describe(\"createBankAccountStatusTransition()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createBankAccountStatusTransition} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.createBankAccountStatusTransition(undefined, undefined, { test: \"value\" }, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#createBankAccountStatusTransition} */\n        it(\"should throw error if bankAccountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.createBankAccountStatusTransition(\"test-user-token\", undefined, { test: \"value\" }, callback)).to.throw(\"bankAccountToken is required\");\n        });\n\n        /** @test {Hyperwallet#createBankAccountStatusTransition} */\n        it(\"should send post call to prepaid card status transition endpoint\", () => {\n            const callback = () => null;\n            client.createBankAccountStatusTransition(\"test-user-token\", \"test-bank-account-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token/status-transitions\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listBankAccountStatusTransitions} */\n    describe(\"listBankAccountStatusTransitions()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listBankAccountStatusTransitions} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBankAccountStatusTransitions(undefined, undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBankAccountStatusTransitions} */\n        it(\"should throw error if bankAccountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBankAccountStatusTransitions(\"test-user-token\", undefined, {}, callback)).to.throw(\"bankAccountToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBankAccountStatusTransitions} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listBankAccountStatusTransitions(\"test-user-token\", \"test-bank-account-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token/status-transitions\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listBankAccountStatusTransitions} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listBankAccountStatusTransitions(\"test-user-token\", \"test-bank-account-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token/status-transitions\", {});\n        });\n\n        /** @test {Hyperwallet#listBankAccountStatusTransitions} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listBankAccountStatusTransitions(\"test-user-token\", \"test-bank-account-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/bank-accounts/test-bank-account-token/status-transitions\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Balances\n    //--------------------------------------\n\n    /** @test {Hyperwallet#listBalancesForUser} */\n    describe(\"listBalancesForUser()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listBalancesForUser} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBalancesForUser(undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBalancesForUser} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listBalancesForUser(\"test-user-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/balances\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listBalancesForUser} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listBalancesForUser(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/balances\", {});\n        });\n\n        /** @test {Hyperwallet#listBalancesForUser} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listBalancesForUser(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/balances\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    /** @test {Hyperwallet#listBalancesForPrepaidCard} */\n    describe(\"listBalancesForPrepaidCard()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listBalancesForPrepaidCard} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBalancesForPrepaidCard(undefined, undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBalancesForPrepaidCard} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBalancesForPrepaidCard(\"test-user-token\", undefined, {}, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBalancesForPrepaidCard} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listBalancesForPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/balances\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listBalancesForPrepaidCard} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listBalancesForPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/balances\", {});\n        });\n\n        /** @test {Hyperwallet#listBalancesForPrepaidCard} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listBalancesForPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/balances\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    /** @test {Hyperwallet#listBalancesForAccount} */\n    describe(\"listBalancesForAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listBalancesForAccount} */\n        it(\"should throw error if programToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBalancesForAccount(undefined, undefined, {}, callback)).to.throw(\"programToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBalancesForAccount} */\n        it(\"should throw error if accountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listBalancesForAccount(\"test-program-token\", undefined, {}, callback)).to.throw(\"accountToken is required\");\n        });\n\n        /** @test {Hyperwallet#listBalancesForAccount} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listBalancesForAccount(\"test-program-token\", \"test-account-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token/balances\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listBalancesForAccount} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listBalancesForAccount(\"test-program-token\", \"test-account-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token/balances\", {});\n        });\n\n        /** @test {Hyperwallet#listBalancesForAccount} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listBalancesForAccount(\"test-program-token\", \"test-account-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token/balances\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Payments\n    //--------------------------------------\n\n    /** @test {Hyperwallet#createPayment} */\n    describe(\"createPayment()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createPayment} */\n        it(\"should do post call to payments endpoint without programToken added\", () => {\n            const callback = () => null;\n            client.createPayment({\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"payments\", {\n                test: \"value\",\n            }, {}, callback);\n        });\n\n        /** @test {Hyperwallet#createPayment} */\n        it(\"should do post call to payments endpoint with programToken added\", () => {\n            client.programToken = \"test-program-token\";\n\n            const callback = () => null;\n            client.createPayment({\n                test: \"value\",\n            }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"payments\", {\n                test: \"value\",\n                programToken: \"test-program-token\",\n            }, {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#getPayment} */\n    describe(\"getPayment()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getPayment} */\n        it(\"should throw error if paymentToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getPayment(undefined, callback)).to.throw(\"paymentToken is required\");\n        });\n\n        /** @test {Hyperwallet#getPayment} */\n        it(\"should do get call if paymentToken is provided\", () => {\n            const callback = () => null;\n            client.getPayment(\"test-payment-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"payments/test-payment-token\", {}, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listPayments} */\n    describe(\"listPayments()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listPayments} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listPayments({ test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"payments\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listPayments} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listPayments({}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"payments\", {});\n        });\n\n        /** @test {Hyperwallet#listPayments} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listPayments({}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"payments\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Programs\n    //--------------------------------------\n\n    /** @test {Hyperwallet#getProgram} */\n    describe(\"getProgram()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getProgram} */\n        it(\"should throw error if programToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getProgram(undefined, callback)).to.throw(\"programToken is required\");\n        });\n\n        /** @test {Hyperwallet#getProgram} */\n        it(\"should do get call if programToken is provided\", () => {\n            const callback = () => null;\n            client.getProgram(\"test-program-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token\", {}, callback);\n        });\n    });\n\n    //--------------------------------------\n    // Program Accounts\n    //--------------------------------------\n\n    /** @test {Hyperwallet#getProgramAccount} */\n    describe(\"getProgramAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getProgramAccount} */\n        it(\"should throw error if programToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getProgramAccount(undefined, undefined, callback)).to.throw(\"programToken is required\");\n        });\n\n        /** @test {Hyperwallet#getProgramAccount} */\n        it(\"should throw error if accountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getProgramAccount(\"test-program-token\", undefined, callback)).to.throw(\"accountToken is required\");\n        });\n\n        /** @test {Hyperwallet#getProgramAccount} */\n        it(\"should do get call if programToken is provided\", () => {\n            const callback = () => null;\n            client.getProgramAccount(\"test-program-token\", \"test-account-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token\", {}, callback);\n        });\n    });\n\n    //--------------------------------------\n    // Transfer Method Configurations\n    //--------------------------------------\n\n    /** @test {Hyperwallet#getTransferMethodConfiguration} */\n    describe(\"getTransferMethodConfiguration()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getTransferMethodConfiguration} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getTransferMethodConfiguration(undefined, undefined, undefined, undefined, undefined, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#getTransferMethodConfiguration} */\n        it(\"should throw error if country is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getTransferMethodConfiguration(\"test-user-token\", undefined, undefined, undefined, undefined, callback)).to.throw(\"country is required\");\n        });\n\n        /** @test {Hyperwallet#getTransferMethodConfiguration} */\n        it(\"should throw error if currency is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getTransferMethodConfiguration(\"test-user-token\", \"test-country\", undefined, undefined, undefined, callback)).to.throw(\"currency is required\");\n        });\n\n        /** @test {Hyperwallet#getTransferMethodConfiguration} */\n        it(\"should throw error if type is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getTransferMethodConfiguration(\"test-user-token\", \"test-country\", \"test-currency\", undefined, undefined, callback)).to.throw(\"type is required\");\n        });\n\n        /** @test {Hyperwallet#getTransferMethodConfiguration} */\n        it(\"should throw error if profileType is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getTransferMethodConfiguration(\"test-user-token\", \"test-country\", \"test-currency\", \"test-type\", undefined, callback)).to.throw(\"profileType is required\");\n        });\n\n        /** @test {Hyperwallet#getTransferMethodConfiguration} */\n        it(\"should do get call if userToken, country, currency, type and profileType is provided\", () => {\n            const callback = () => null;\n            client.getTransferMethodConfiguration(\"test-user-token\", \"test-country\", \"test-currency\", \"test-type\", \"test-profile-type\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"transfer-method-configurations\", {\n                userToken: \"test-user-token\",\n                country: \"test-country\",\n                currency: \"test-currency\",\n                type: \"test-type\",\n                profileType: \"test-profile-type\",\n            }, callback);\n        });\n    });\n\n    /** @test {Hyperwallet#listTransferMethodConfigurations} */\n    describe(\"listTransferMethodConfigurations()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listTransferMethodConfigurations} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listTransferMethodConfigurations(undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listTransferMethodConfigurations} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listTransferMethodConfigurations(\"test-user-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"transfer-method-configurations\", {\n                test: \"value\",\n                userToken: \"test-user-token\",\n            });\n        });\n\n        /** @test {Hyperwallet#listTransferMethodConfigurations} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listTransferMethodConfigurations(\"test-user-token\", undefined, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"transfer-method-configurations\", {\n                userToken: \"test-user-token\",\n            });\n        });\n\n        /** @test {Hyperwallet#listTransferMethodConfigurations} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listTransferMethodConfigurations(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"transfer-method-configurations\", {\n                userToken: \"test-user-token\",\n            });\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    describe(\"createTransferMethod()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doPost: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#createTransferMethod} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            const userToken = null;\n            const cacheToken = null;\n\n            expect(() => client.createTransferMethod(userToken, cacheToken, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#createTransferMethod} */\n        it(\"should throw error if cacheToken is missing\", () => {\n            const callback = () => null;\n            const userToken = \"test-user-token\";\n            const cacheToken = null;\n\n            expect(() => client.createTransferMethod(userToken, cacheToken, callback)).to.throw(\"jsonCacheToken is required\");\n        });\n\n        /** @test {Hyperwallet#createTransferMethod} */\n        it(\"should do post call with userToken and cacheToken\", () => {\n            const callback = () => null;\n            const userToken = \"test-user-token\";\n            const cacheToken = \"test-cache-token\";\n            client.createTransferMethod(userToken, cacheToken, { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/transfer-methods\", { test: \"value\" }, { \"Json-Cache-Token\": \"test-cache-token\" });\n        });\n    });\n\n    //--------------------------------------\n    // Receipts\n    //--------------------------------------\n\n    /** @test {Hyperwallet#listReceiptsForProgramAccount} */\n    describe(\"listReceiptsForProgramAccount()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listReceiptsForProgramAccount} */\n        it(\"should throw error if programToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listReceiptsForProgramAccount(undefined, undefined, {}, callback)).to.throw(\"programToken is required\");\n        });\n\n        /** @test {Hyperwallet#listReceiptsForProgramAccount} */\n        it(\"should throw error if accountToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listReceiptsForProgramAccount(\"test-program-token\", undefined, {}, callback)).to.throw(\"accountToken is required\");\n        });\n\n        /** @test {Hyperwallet#listReceiptsForProgramAccount} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listReceiptsForProgramAccount(\"test-program-token\", \"test-account-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token/receipts\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listReceiptsForProgramAccount} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listReceiptsForProgramAccount(\"test-program-token\", \"test-account-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token/receipts\", {});\n        });\n\n        /** @test {Hyperwallet#listReceiptsForProgramAccount} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listReceiptsForProgramAccount(\"test-program-token\", \"test-account-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"programs/test-program-token/accounts/test-account-token/receipts\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    /** @test {Hyperwallet#listReceiptsForUser} */\n    describe(\"listReceiptsForUser()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listReceiptsForUser} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listReceiptsForUser(undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listReceiptsForUser} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listReceiptsForUser(\"test-user-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/receipts\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listReceiptsForUser} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listReceiptsForUser(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/receipts\", {});\n        });\n\n        /** @test {Hyperwallet#listReceiptsForUser} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listReceiptsForUser(\"test-user-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/receipts\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    /** @test {Hyperwallet#listReceiptsForPrepaidCard} */\n    describe(\"listReceiptsForPrepaidCard()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listReceiptsForPrepaidCard} */\n        it(\"should throw error if userToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listReceiptsForPrepaidCard(undefined, undefined, {}, callback)).to.throw(\"userToken is required\");\n        });\n\n        /** @test {Hyperwallet#listReceiptsForPrepaidCard} */\n        it(\"should throw error if prepaidCardToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.listReceiptsForPrepaidCard(\"test-user-token\", undefined, {}, callback)).to.throw(\"prepaidCardToken is required\");\n        });\n\n        /** @test {Hyperwallet#listReceiptsForPrepaidCard} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listReceiptsForPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", { test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/receipts\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listReceiptsForPrepaidCard} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listReceiptsForPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/receipts\", {});\n        });\n\n        /** @test {Hyperwallet#listReceiptsForPrepaidCard} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listReceiptsForPrepaidCard(\"test-user-token\", \"test-prepaid-card-token\", {}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"users/test-user-token/prepaid-cards/test-prepaid-card-token/receipts\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    //--------------------------------------\n    // Webhooks\n    //--------------------------------------\n\n    describe(\"listWebhookNotifications()\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#listWebhookNotifications} */\n        it(\"should do get call with options\", () => {\n            const callback = () => null;\n            client.listWebhookNotifications({ test: \"value\" }, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"webhook-notifications\", { test: \"value\" });\n        });\n\n        /** @test {Hyperwallet#listWebhookNotifications} */\n        it(\"should do get call without options\", () => {\n            const callback = () => null;\n            client.listWebhookNotifications({}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"webhook-notifications\", {});\n        });\n\n        /** @test {Hyperwallet#listWebhookNotifications} */\n        it(\"should handle 204 return\", (cb) => {\n            const callback = (err, data) => {\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n\n                cb();\n            };\n            client.listWebhookNotifications({}, callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"webhook-notifications\", {});\n\n            apiClientSpy.getCall(0).args[2](undefined, {}, {\n                status: 204,\n            });\n        });\n    });\n\n    describe(\"getWebhookNotification\", () => {\n        let client;\n        let apiClientSpy;\n\n        beforeEach(() => {\n            apiClientSpy = sinon.spy();\n            client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n            client.client = {\n                doGet: apiClientSpy,\n            };\n        });\n\n        /** @test {Hyperwallet#getWebhookNotification} */\n        it(\"should throw error if webhookToken is missing\", () => {\n            const callback = () => null;\n            expect(() => client.getWebhookNotification(undefined, {}, callback)).to.throw(\"webhookToken is required\");\n        });\n\n        /** @test {Hyperwallet#getWebhookNotification} */\n        it(\"should do get call if webhookToken is provided\", () => {\n            const callback = () => null;\n            client.getWebhookNotification(\"webhook-token\", callback);\n\n            apiClientSpy.should.have.been.calledOnce();\n            apiClientSpy.should.have.been.calledWith(\"webhook-notifications/webhook-token\", {}, callback);\n        });\n    });\n\n    //--------------------------------------\n    // Internal utils\n    //--------------------------------------\n\n    describe(\"addProgramToken()\", () => {\n        it(\"should do nothing if no data is provided\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n\n            expect(client.addProgramToken()).to.be.undefined();\n        });\n\n        it(\"should do nothing if no programToken is set\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n            });\n\n            client.addProgramToken({ test: \"value\" }).should.be.deep.equal({ test: \"value\" });\n        });\n\n        it(\"should do nothing if programToken is set in data\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n                programToken: \"test-program-token\",\n            });\n\n            client.addProgramToken({ test: \"value\", programToken: \"my-program-token\" }).should.be.deep.equal({ test: \"value\", programToken: \"my-program-token\" });\n        });\n\n        it(\"should add programToken if no programToken is set in data\", () => {\n            const client = new Hyperwallet({\n                username: \"test-username\",\n                password: \"test-password\",\n                programToken: \"test-program-token\",\n            });\n\n            client.addProgramToken({ test: \"value\" }).should.be.deep.equal({ test: \"value\", programToken: \"test-program-token\" });\n        });\n    });\n\n    describe(\"handle204Response()\", () => {\n        it(\"should return a 'function' with a argument\", () => {\n            Hyperwallet.handle204Response(() => null).should.be.a(\"function\");\n        });\n\n        it(\"should do nothing for errors\", (cb) => {\n            const providedErr = new Error(\"Test\");\n            const providedData = {\n                test: \"value\",\n            };\n            const providedRes = {\n                status: 200,\n            };\n\n            const callback = Hyperwallet.handle204Response((err, data, res) => {\n                err.should.be.deep.equal(providedErr);\n                data.should.be.deep.equal(providedData);\n                res.should.be.deep.equal(providedRes);\n\n                cb();\n            });\n            callback(providedErr, providedData, providedRes);\n        });\n\n        it(\"should do nothing for non 204 responses\", (cb) => {\n            const providedData = {\n                test: \"value\",\n            };\n            const providedRes = {\n                status: 200,\n            };\n\n            const callback = Hyperwallet.handle204Response((err, data, res) => {\n                expect(err).to.be.undefined();\n\n                data.should.be.deep.equal(providedData);\n                res.should.be.deep.equal(providedRes);\n\n                cb();\n            });\n            callback(undefined, providedData, providedRes);\n        });\n\n        it(\"should return empty list for 204 responses\", (cb) => {\n            const providedData = {\n                test: \"value\",\n            };\n            const providedRes = {\n                status: 204,\n            };\n\n            const callback = Hyperwallet.handle204Response((err, data, res) => {\n                expect(err).to.be.undefined();\n\n                data.should.be.deep.equal({\n                    count: 0,\n                    data: [],\n                });\n                res.should.be.deep.equal(providedRes);\n\n                cb();\n            });\n            callback(undefined, providedData, providedRes);\n        });\n    });\n});\n"
  },
  {
    "__docId__": 118,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "test/Hyperwallet.spec.js",
    "testDepth": 0,
    "longname": "test/Hyperwallet.spec.js~describe0",
    "access": null,
    "description": "Hyperwallet",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet}"
      }
    ],
    "testTargets": [
      "Hyperwallet"
    ]
  },
  {
    "__docId__": 119,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe1",
    "testId": 1,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1",
    "access": null,
    "description": "constructor()",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 120,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it2",
    "testId": 2,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it2",
    "access": null,
    "description": "should initialize ApiClient with default server",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 121,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it3",
    "testId": 3,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it3",
    "access": null,
    "description": "should set programToken to undefined if not provided",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 122,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it4",
    "testId": 4,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it4",
    "access": null,
    "description": "should set programToken if provided",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 123,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it5",
    "testId": 5,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it5",
    "access": null,
    "description": "should initialize ApiClient with provided server",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 124,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it6",
    "testId": 6,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it6",
    "access": null,
    "description": "should throw error if username is missing",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 125,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it7",
    "testId": 7,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it7",
    "access": null,
    "description": "should throw error if password is missing",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 126,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it8",
    "testId": 8,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe1.it8",
    "access": null,
    "description": "should throw error if username and password is missing",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#constructor}"
      }
    ],
    "testTargets": [
      "Hyperwallet#constructor"
    ]
  },
  {
    "__docId__": 127,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe9",
    "testId": 9,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe9",
    "access": null,
    "description": "listUsers()",
    "lineNumber": 85
  },
  {
    "__docId__": 128,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it10",
    "testId": 10,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe9",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe9.it10",
    "access": null,
    "description": "should not have any TLS issues",
    "lineNumber": 86
  },
  {
    "__docId__": 129,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe11",
    "testId": 11,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe11",
    "access": null,
    "description": "createUser()",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createUser"
    ]
  },
  {
    "__docId__": 130,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe11",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe11.it12",
    "access": null,
    "description": "should do post call to users endpoint without programToken added",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createUser"
    ]
  },
  {
    "__docId__": 131,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it13",
    "testId": 13,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe11",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe11.it13",
    "access": null,
    "description": "should do post call to users endpoint with programToken added",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createUser"
    ]
  },
  {
    "__docId__": 132,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe14",
    "testId": 14,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe14",
    "access": null,
    "description": "getUser()",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getUser"
    ]
  },
  {
    "__docId__": 133,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it15",
    "testId": 15,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe14",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe14.it15",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getUser"
    ]
  },
  {
    "__docId__": 134,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it16",
    "testId": 16,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe14",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe14.it16",
    "access": null,
    "description": "should do get call if userToken is provided",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getUser"
    ]
  },
  {
    "__docId__": 135,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe17",
    "testId": 17,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe17",
    "access": null,
    "description": "updateUser()",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateUser"
    ]
  },
  {
    "__docId__": 136,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it18",
    "testId": 18,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe17",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe17.it18",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateUser"
    ]
  },
  {
    "__docId__": 137,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe17",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe17.it19",
    "access": null,
    "description": "should do put call to users endpoint without programToken added",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateUser"
    ]
  },
  {
    "__docId__": 138,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it20",
    "testId": 20,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe17",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe17.it20",
    "access": null,
    "description": "should do put call to users endpoint with programToken added",
    "lineNumber": 216,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateUser"
    ]
  },
  {
    "__docId__": 139,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe21",
    "testId": 21,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe21",
    "access": null,
    "description": "listUsers()",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listUsers}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listUsers"
    ]
  },
  {
    "__docId__": 140,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe21",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe21.it22",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listUsers}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listUsers"
    ]
  },
  {
    "__docId__": 141,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it23",
    "testId": 23,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe21",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe21.it23",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listUsers}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listUsers"
    ]
  },
  {
    "__docId__": 142,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it24",
    "testId": 24,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe21",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe21.it24",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 267,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listUsers}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listUsers"
    ]
  },
  {
    "__docId__": 143,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe25",
    "testId": 25,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe25",
    "access": null,
    "description": "createPrepaidCard()",
    "lineNumber": 292,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCard"
    ]
  },
  {
    "__docId__": 144,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it26",
    "testId": 26,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe25",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe25.it26",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 308,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCard"
    ]
  },
  {
    "__docId__": 145,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it27",
    "testId": 27,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe25",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe25.it27",
    "access": null,
    "description": "should do post call to prepaid cards endpoint",
    "lineNumber": 314,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCard"
    ]
  },
  {
    "__docId__": 146,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe28",
    "testId": 28,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe28",
    "access": null,
    "description": "getPrepaidCard()",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCard"
    ]
  },
  {
    "__docId__": 147,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe28",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe28.it29",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 344,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCard"
    ]
  },
  {
    "__docId__": 148,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe28",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe28.it30",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 350,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCard"
    ]
  },
  {
    "__docId__": 149,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it31",
    "testId": 31,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe28",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe28.it31",
    "access": null,
    "description": "should do get call if userToken and prepaidCardToken is provided",
    "lineNumber": 356,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCard"
    ]
  },
  {
    "__docId__": 150,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe32",
    "testId": 32,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe32",
    "access": null,
    "description": "updatePrepaidCard()",
    "lineNumber": 366,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updatePrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updatePrepaidCard"
    ]
  },
  {
    "__docId__": 151,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe32",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe32.it33",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 382,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updatePrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updatePrepaidCard"
    ]
  },
  {
    "__docId__": 152,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it34",
    "testId": 34,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe32",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe32.it34",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 388,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updatePrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updatePrepaidCard"
    ]
  },
  {
    "__docId__": 153,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it35",
    "testId": 35,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe32",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe32.it35",
    "access": null,
    "description": "should do put call to prepaid cards endpoint",
    "lineNumber": 394,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updatePrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updatePrepaidCard"
    ]
  },
  {
    "__docId__": 154,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe36",
    "testId": 36,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe36",
    "access": null,
    "description": "listPrepaidCards()",
    "lineNumber": 408,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCards}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCards"
    ]
  },
  {
    "__docId__": 155,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it37",
    "testId": 37,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe36",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe36.it37",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 424,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCards}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCards"
    ]
  },
  {
    "__docId__": 156,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe36",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe36.it38",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 430,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCards}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCards"
    ]
  },
  {
    "__docId__": 157,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it39",
    "testId": 39,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe36",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe36.it39",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 439,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCards}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCards"
    ]
  },
  {
    "__docId__": 158,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe36",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe36.it40",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 448,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCards}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCards"
    ]
  },
  {
    "__docId__": 159,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe41",
    "testId": 41,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe41",
    "access": null,
    "lineNumber": 479
  },
  {
    "__docId__": 160,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it42",
    "testId": 42,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe41",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe41.it42",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 502,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#suspendPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#unsuspendPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#lostOrStolenPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivatePrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#lockPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#unlockPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#suspendPrepaidCard",
      "Hyperwallet#unsuspendPrepaidCard",
      "Hyperwallet#lostOrStolenPrepaidCard",
      "Hyperwallet#deactivatePrepaidCard",
      "Hyperwallet#lockPrepaidCard",
      "Hyperwallet#unlockPrepaidCard"
    ]
  },
  {
    "__docId__": 161,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it43",
    "testId": 43,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe41",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe41.it43",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 515,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#suspendPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#unsuspendPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#lostOrStolenPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivatePrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#lockPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#unlockPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#suspendPrepaidCard",
      "Hyperwallet#unsuspendPrepaidCard",
      "Hyperwallet#lostOrStolenPrepaidCard",
      "Hyperwallet#deactivatePrepaidCard",
      "Hyperwallet#lockPrepaidCard",
      "Hyperwallet#unlockPrepaidCard"
    ]
  },
  {
    "__docId__": 162,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe41",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe41.it44",
    "access": null,
    "lineNumber": 528,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#suspendPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#unsuspendPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#lostOrStolenPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivatePrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#lockPrepaidCard}"
      },
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#unlockPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#suspendPrepaidCard",
      "Hyperwallet#unsuspendPrepaidCard",
      "Hyperwallet#lostOrStolenPrepaidCard",
      "Hyperwallet#deactivatePrepaidCard",
      "Hyperwallet#lockPrepaidCard",
      "Hyperwallet#unlockPrepaidCard"
    ]
  },
  {
    "__docId__": 163,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe45",
    "testId": 45,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe45",
    "access": null,
    "description": "createPrepaidCardStatusTransition()",
    "lineNumber": 541,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 164,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it46",
    "testId": 46,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe45",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe45.it46",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 557,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 165,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it47",
    "testId": 47,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe45",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe45.it47",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 563,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 166,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it48",
    "testId": 48,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe45",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe45.it48",
    "access": null,
    "description": "should send post call to prepaid card status transition endpoint",
    "lineNumber": 569,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 167,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe49",
    "testId": 49,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe49",
    "access": null,
    "description": "getPrepaidCardStatusTransition()",
    "lineNumber": 581,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 168,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it50",
    "testId": 50,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe49",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe49.it50",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 597,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 169,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it51",
    "testId": 51,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe49",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe49.it51",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 603,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 170,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it52",
    "testId": 52,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe49",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe49.it52",
    "access": null,
    "description": "should throw error if statusTransitionToken is missing",
    "lineNumber": 609,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 171,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it53",
    "testId": 53,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe49",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe49.it53",
    "access": null,
    "description": "should do get call if userToken, prepaidCardToken and statusTransitionToken is provided",
    "lineNumber": 615,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPrepaidCardStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPrepaidCardStatusTransition"
    ]
  },
  {
    "__docId__": 172,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe54",
    "testId": 54,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe54",
    "access": null,
    "description": "listPrepaidCardStatusTransitions()",
    "lineNumber": 625,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCardStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCardStatusTransitions"
    ]
  },
  {
    "__docId__": 173,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it55",
    "testId": 55,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe54",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe54.it55",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 641,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCardStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCardStatusTransitions"
    ]
  },
  {
    "__docId__": 174,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it56",
    "testId": 56,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe54",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe54.it56",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 647,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCardStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCardStatusTransitions"
    ]
  },
  {
    "__docId__": 175,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it57",
    "testId": 57,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe54",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe54.it57",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 653,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCardStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCardStatusTransitions"
    ]
  },
  {
    "__docId__": 176,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it58",
    "testId": 58,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe54",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe54.it58",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 662,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCardStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCardStatusTransitions"
    ]
  },
  {
    "__docId__": 177,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it59",
    "testId": 59,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe54",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe54.it59",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 671,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPrepaidCardStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPrepaidCardStatusTransitions"
    ]
  },
  {
    "__docId__": 178,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe60",
    "testId": 60,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe60",
    "access": null,
    "description": "createBankAccount()",
    "lineNumber": 696,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccount"
    ]
  },
  {
    "__docId__": 179,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it61",
    "testId": 61,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe60",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe60.it61",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 712,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccount"
    ]
  },
  {
    "__docId__": 180,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it62",
    "testId": 62,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe60",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe60.it62",
    "access": null,
    "description": "should do post call to bank accounts endpoint",
    "lineNumber": 718,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccount"
    ]
  },
  {
    "__docId__": 181,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe63",
    "testId": 63,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe63",
    "access": null,
    "description": "getBankAccount()",
    "lineNumber": 732,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getBankAccount"
    ]
  },
  {
    "__docId__": 182,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it64",
    "testId": 64,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe63",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe63.it64",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 748,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getBankAccount"
    ]
  },
  {
    "__docId__": 183,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it65",
    "testId": 65,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe63",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe63.it65",
    "access": null,
    "description": "should throw error if bankAccountToken is missing",
    "lineNumber": 754,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getBankAccount"
    ]
  },
  {
    "__docId__": 184,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it66",
    "testId": 66,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe63",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe63.it66",
    "access": null,
    "description": "should do get call if userToken and bankAccountToken is provided",
    "lineNumber": 760,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getBankAccount"
    ]
  },
  {
    "__docId__": 185,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe67",
    "testId": 67,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe67",
    "access": null,
    "description": "updateBankAccount()",
    "lineNumber": 770,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateBankAccount"
    ]
  },
  {
    "__docId__": 186,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it68",
    "testId": 68,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe67",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe67.it68",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 786,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateBankAccount"
    ]
  },
  {
    "__docId__": 187,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it69",
    "testId": 69,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe67",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe67.it69",
    "access": null,
    "description": "should throw error if bankAccountToken is missing",
    "lineNumber": 792,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateBankAccount"
    ]
  },
  {
    "__docId__": 188,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it70",
    "testId": 70,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe67",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe67.it70",
    "access": null,
    "description": "should do put call to bank accounts endpoint",
    "lineNumber": 798,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#updateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#updateBankAccount"
    ]
  },
  {
    "__docId__": 189,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe71",
    "testId": 71,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe71",
    "access": null,
    "description": "listBankAccounts()",
    "lineNumber": 812,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccounts}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccounts"
    ]
  },
  {
    "__docId__": 190,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it72",
    "testId": 72,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe71",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe71.it72",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 828,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccounts}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccounts"
    ]
  },
  {
    "__docId__": 191,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it73",
    "testId": 73,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe71",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe71.it73",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 834,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccounts}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccounts"
    ]
  },
  {
    "__docId__": 192,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it74",
    "testId": 74,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe71",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe71.it74",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 843,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccounts}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccounts"
    ]
  },
  {
    "__docId__": 193,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it75",
    "testId": 75,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe71",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe71.it75",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 852,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccounts}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccounts"
    ]
  },
  {
    "__docId__": 194,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe76",
    "testId": 76,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe76",
    "access": null,
    "description": "deactivateBankAccount()",
    "lineNumber": 873,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#deactivateBankAccount"
    ]
  },
  {
    "__docId__": 195,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it77",
    "testId": 77,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe76",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe76.it77",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 889,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#deactivateBankAccount"
    ]
  },
  {
    "__docId__": 196,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it78",
    "testId": 78,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe76",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe76.it78",
    "access": null,
    "description": "should throw error if bankAccountToken is missing",
    "lineNumber": 895,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#deactivateBankAccount"
    ]
  },
  {
    "__docId__": 197,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it79",
    "testId": 79,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe76",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe76.it79",
    "access": null,
    "description": "should send transition to 'DE-ACTIVATED'",
    "lineNumber": 901,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#deactivateBankAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#deactivateBankAccount"
    ]
  },
  {
    "__docId__": 198,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe80",
    "testId": 80,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe80",
    "access": null,
    "description": "createBankAccountStatusTransition()",
    "lineNumber": 913,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccountStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccountStatusTransition"
    ]
  },
  {
    "__docId__": 199,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it81",
    "testId": 81,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe80",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe80.it81",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 929,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccountStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccountStatusTransition"
    ]
  },
  {
    "__docId__": 200,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it82",
    "testId": 82,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe80",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe80.it82",
    "access": null,
    "description": "should throw error if bankAccountToken is missing",
    "lineNumber": 935,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccountStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccountStatusTransition"
    ]
  },
  {
    "__docId__": 201,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it83",
    "testId": 83,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe80",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe80.it83",
    "access": null,
    "description": "should send post call to prepaid card status transition endpoint",
    "lineNumber": 941,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createBankAccountStatusTransition}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createBankAccountStatusTransition"
    ]
  },
  {
    "__docId__": 202,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe84",
    "testId": 84,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe84",
    "access": null,
    "description": "listBankAccountStatusTransitions()",
    "lineNumber": 953,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccountStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccountStatusTransitions"
    ]
  },
  {
    "__docId__": 203,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it85",
    "testId": 85,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe84",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe84.it85",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 969,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccountStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccountStatusTransitions"
    ]
  },
  {
    "__docId__": 204,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it86",
    "testId": 86,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe84",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe84.it86",
    "access": null,
    "description": "should throw error if bankAccountToken is missing",
    "lineNumber": 975,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccountStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccountStatusTransitions"
    ]
  },
  {
    "__docId__": 205,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it87",
    "testId": 87,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe84",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe84.it87",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 981,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccountStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccountStatusTransitions"
    ]
  },
  {
    "__docId__": 206,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it88",
    "testId": 88,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe84",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe84.it88",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 990,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccountStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccountStatusTransitions"
    ]
  },
  {
    "__docId__": 207,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it89",
    "testId": 89,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe84",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe84.it89",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 999,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBankAccountStatusTransitions}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBankAccountStatusTransitions"
    ]
  },
  {
    "__docId__": 208,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe90",
    "testId": 90,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe90",
    "access": null,
    "description": "listBalancesForUser()",
    "lineNumber": 1024,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForUser"
    ]
  },
  {
    "__docId__": 209,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it91",
    "testId": 91,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe90",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe90.it91",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1040,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForUser"
    ]
  },
  {
    "__docId__": 210,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it92",
    "testId": 92,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe90",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe90.it92",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1046,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForUser"
    ]
  },
  {
    "__docId__": 211,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it93",
    "testId": 93,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe90",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe90.it93",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1055,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForUser"
    ]
  },
  {
    "__docId__": 212,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it94",
    "testId": 94,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe90",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe90.it94",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1064,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForUser"
    ]
  },
  {
    "__docId__": 213,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe95",
    "testId": 95,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe95",
    "access": null,
    "description": "listBalancesForPrepaidCard()",
    "lineNumber": 1085,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForPrepaidCard"
    ]
  },
  {
    "__docId__": 214,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it96",
    "testId": 96,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe95",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe95.it96",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1101,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForPrepaidCard"
    ]
  },
  {
    "__docId__": 215,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it97",
    "testId": 97,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe95",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe95.it97",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 1107,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForPrepaidCard"
    ]
  },
  {
    "__docId__": 216,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it98",
    "testId": 98,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe95",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe95.it98",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1113,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForPrepaidCard"
    ]
  },
  {
    "__docId__": 217,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it99",
    "testId": 99,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe95",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe95.it99",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1122,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForPrepaidCard"
    ]
  },
  {
    "__docId__": 218,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it100",
    "testId": 100,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe95",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe95.it100",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1131,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForPrepaidCard"
    ]
  },
  {
    "__docId__": 219,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe101",
    "testId": 101,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe101",
    "access": null,
    "description": "listBalancesForAccount()",
    "lineNumber": 1152,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForAccount"
    ]
  },
  {
    "__docId__": 220,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it102",
    "testId": 102,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe101",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe101.it102",
    "access": null,
    "description": "should throw error if programToken is missing",
    "lineNumber": 1168,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForAccount"
    ]
  },
  {
    "__docId__": 221,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it103",
    "testId": 103,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe101",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe101.it103",
    "access": null,
    "description": "should throw error if accountToken is missing",
    "lineNumber": 1174,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForAccount"
    ]
  },
  {
    "__docId__": 222,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it104",
    "testId": 104,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe101",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe101.it104",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1180,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForAccount"
    ]
  },
  {
    "__docId__": 223,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it105",
    "testId": 105,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe101",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe101.it105",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1189,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForAccount"
    ]
  },
  {
    "__docId__": 224,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it106",
    "testId": 106,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe101",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe101.it106",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1198,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listBalancesForAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listBalancesForAccount"
    ]
  },
  {
    "__docId__": 225,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe107",
    "testId": 107,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe107",
    "access": null,
    "description": "createPayment()",
    "lineNumber": 1223,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPayment}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPayment"
    ]
  },
  {
    "__docId__": 226,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it108",
    "testId": 108,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe107",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe107.it108",
    "access": null,
    "description": "should do post call to payments endpoint without programToken added",
    "lineNumber": 1239,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPayment}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPayment"
    ]
  },
  {
    "__docId__": 227,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it109",
    "testId": 109,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe107",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe107.it109",
    "access": null,
    "description": "should do post call to payments endpoint with programToken added",
    "lineNumber": 1252,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createPayment}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createPayment"
    ]
  },
  {
    "__docId__": 228,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe110",
    "testId": 110,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe110",
    "access": null,
    "description": "getPayment()",
    "lineNumber": 1269,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPayment}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPayment"
    ]
  },
  {
    "__docId__": 229,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it111",
    "testId": 111,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe110",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe110.it111",
    "access": null,
    "description": "should throw error if paymentToken is missing",
    "lineNumber": 1285,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPayment}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPayment"
    ]
  },
  {
    "__docId__": 230,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it112",
    "testId": 112,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe110",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe110.it112",
    "access": null,
    "description": "should do get call if paymentToken is provided",
    "lineNumber": 1291,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getPayment}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getPayment"
    ]
  },
  {
    "__docId__": 231,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe113",
    "testId": 113,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe113",
    "access": null,
    "description": "listPayments()",
    "lineNumber": 1301,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPayments}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPayments"
    ]
  },
  {
    "__docId__": 232,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it114",
    "testId": 114,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe113",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe113.it114",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1317,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPayments}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPayments"
    ]
  },
  {
    "__docId__": 233,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it115",
    "testId": 115,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe113",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe113.it115",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1326,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPayments}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPayments"
    ]
  },
  {
    "__docId__": 234,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it116",
    "testId": 116,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe113",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe113.it116",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1335,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listPayments}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listPayments"
    ]
  },
  {
    "__docId__": 235,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe117",
    "testId": 117,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe117",
    "access": null,
    "description": "getProgram()",
    "lineNumber": 1360,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgram}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgram"
    ]
  },
  {
    "__docId__": 236,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it118",
    "testId": 118,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe117",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe117.it118",
    "access": null,
    "description": "should throw error if programToken is missing",
    "lineNumber": 1376,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgram}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgram"
    ]
  },
  {
    "__docId__": 237,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it119",
    "testId": 119,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe117",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe117.it119",
    "access": null,
    "description": "should do get call if programToken is provided",
    "lineNumber": 1382,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgram}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgram"
    ]
  },
  {
    "__docId__": 238,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe120",
    "testId": 120,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe120",
    "access": null,
    "description": "getProgramAccount()",
    "lineNumber": 1396,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgramAccount"
    ]
  },
  {
    "__docId__": 239,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it121",
    "testId": 121,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe120",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe120.it121",
    "access": null,
    "description": "should throw error if programToken is missing",
    "lineNumber": 1412,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgramAccount"
    ]
  },
  {
    "__docId__": 240,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it122",
    "testId": 122,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe120",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe120.it122",
    "access": null,
    "description": "should throw error if accountToken is missing",
    "lineNumber": 1418,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgramAccount"
    ]
  },
  {
    "__docId__": 241,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it123",
    "testId": 123,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe120",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe120.it123",
    "access": null,
    "description": "should do get call if programToken is provided",
    "lineNumber": 1424,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getProgramAccount"
    ]
  },
  {
    "__docId__": 242,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe124",
    "testId": 124,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124",
    "access": null,
    "description": "getTransferMethodConfiguration()",
    "lineNumber": 1438,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 243,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it125",
    "testId": 125,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe124",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124.it125",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1454,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 244,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it126",
    "testId": 126,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe124",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124.it126",
    "access": null,
    "description": "should throw error if country is missing",
    "lineNumber": 1460,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 245,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it127",
    "testId": 127,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe124",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124.it127",
    "access": null,
    "description": "should throw error if currency is missing",
    "lineNumber": 1466,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 246,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it128",
    "testId": 128,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe124",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124.it128",
    "access": null,
    "description": "should throw error if type is missing",
    "lineNumber": 1472,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 247,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it129",
    "testId": 129,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe124",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124.it129",
    "access": null,
    "description": "should throw error if profileType is missing",
    "lineNumber": 1478,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 248,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it130",
    "testId": 130,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe124",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe124.it130",
    "access": null,
    "description": "should do get call if userToken, country, currency, type and profileType is provided",
    "lineNumber": 1484,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getTransferMethodConfiguration}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getTransferMethodConfiguration"
    ]
  },
  {
    "__docId__": 249,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe131",
    "testId": 131,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe131",
    "access": null,
    "description": "listTransferMethodConfigurations()",
    "lineNumber": 1500,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listTransferMethodConfigurations}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listTransferMethodConfigurations"
    ]
  },
  {
    "__docId__": 250,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it132",
    "testId": 132,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe131",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe131.it132",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1516,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listTransferMethodConfigurations}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listTransferMethodConfigurations"
    ]
  },
  {
    "__docId__": 251,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it133",
    "testId": 133,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe131",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe131.it133",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1522,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listTransferMethodConfigurations}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listTransferMethodConfigurations"
    ]
  },
  {
    "__docId__": 252,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it134",
    "testId": 134,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe131",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe131.it134",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1534,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listTransferMethodConfigurations}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listTransferMethodConfigurations"
    ]
  },
  {
    "__docId__": 253,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it135",
    "testId": 135,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe131",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe131.it135",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1545,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listTransferMethodConfigurations}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listTransferMethodConfigurations"
    ]
  },
  {
    "__docId__": 254,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe136",
    "testId": 136,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe136",
    "access": null,
    "description": "createTransferMethod()",
    "lineNumber": 1567
  },
  {
    "__docId__": 255,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it137",
    "testId": 137,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe136",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe136.it137",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1583,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createTransferMethod}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createTransferMethod"
    ]
  },
  {
    "__docId__": 256,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it138",
    "testId": 138,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe136",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe136.it138",
    "access": null,
    "description": "should throw error if cacheToken is missing",
    "lineNumber": 1592,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createTransferMethod}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createTransferMethod"
    ]
  },
  {
    "__docId__": 257,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it139",
    "testId": 139,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe136",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe136.it139",
    "access": null,
    "description": "should do post call with userToken and cacheToken",
    "lineNumber": 1601,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#createTransferMethod}"
      }
    ],
    "testTargets": [
      "Hyperwallet#createTransferMethod"
    ]
  },
  {
    "__docId__": 258,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe140",
    "testId": 140,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe140",
    "access": null,
    "description": "listReceiptsForProgramAccount()",
    "lineNumber": 1617,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForProgramAccount"
    ]
  },
  {
    "__docId__": 259,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it141",
    "testId": 141,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe140",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe140.it141",
    "access": null,
    "description": "should throw error if programToken is missing",
    "lineNumber": 1633,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForProgramAccount"
    ]
  },
  {
    "__docId__": 260,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it142",
    "testId": 142,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe140",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe140.it142",
    "access": null,
    "description": "should throw error if accountToken is missing",
    "lineNumber": 1639,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForProgramAccount"
    ]
  },
  {
    "__docId__": 261,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it143",
    "testId": 143,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe140",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe140.it143",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1645,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForProgramAccount"
    ]
  },
  {
    "__docId__": 262,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it144",
    "testId": 144,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe140",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe140.it144",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1654,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForProgramAccount"
    ]
  },
  {
    "__docId__": 263,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it145",
    "testId": 145,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe140",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe140.it145",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1663,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForProgramAccount}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForProgramAccount"
    ]
  },
  {
    "__docId__": 264,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe146",
    "testId": 146,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe146",
    "access": null,
    "description": "listReceiptsForUser()",
    "lineNumber": 1684,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForUser"
    ]
  },
  {
    "__docId__": 265,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it147",
    "testId": 147,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe146",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe146.it147",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1700,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForUser"
    ]
  },
  {
    "__docId__": 266,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it148",
    "testId": 148,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe146",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe146.it148",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1706,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForUser"
    ]
  },
  {
    "__docId__": 267,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it149",
    "testId": 149,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe146",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe146.it149",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1715,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForUser"
    ]
  },
  {
    "__docId__": 268,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it150",
    "testId": 150,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe146",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe146.it150",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1724,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForUser}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForUser"
    ]
  },
  {
    "__docId__": 269,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe151",
    "testId": 151,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe151",
    "access": null,
    "description": "listReceiptsForPrepaidCard()",
    "lineNumber": 1745,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForPrepaidCard"
    ]
  },
  {
    "__docId__": 270,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it152",
    "testId": 152,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe151",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe151.it152",
    "access": null,
    "description": "should throw error if userToken is missing",
    "lineNumber": 1761,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForPrepaidCard"
    ]
  },
  {
    "__docId__": 271,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it153",
    "testId": 153,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe151",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe151.it153",
    "access": null,
    "description": "should throw error if prepaidCardToken is missing",
    "lineNumber": 1767,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForPrepaidCard"
    ]
  },
  {
    "__docId__": 272,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it154",
    "testId": 154,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe151",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe151.it154",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1773,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForPrepaidCard"
    ]
  },
  {
    "__docId__": 273,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it155",
    "testId": 155,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe151",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe151.it155",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1782,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForPrepaidCard"
    ]
  },
  {
    "__docId__": 274,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it156",
    "testId": 156,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe151",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe151.it156",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1791,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listReceiptsForPrepaidCard}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listReceiptsForPrepaidCard"
    ]
  },
  {
    "__docId__": 275,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe157",
    "testId": 157,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe157",
    "access": null,
    "description": "listWebhookNotifications()",
    "lineNumber": 1815
  },
  {
    "__docId__": 276,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it158",
    "testId": 158,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe157",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe157.it158",
    "access": null,
    "description": "should do get call with options",
    "lineNumber": 1831,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listWebhookNotifications}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listWebhookNotifications"
    ]
  },
  {
    "__docId__": 277,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it159",
    "testId": 159,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe157",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe157.it159",
    "access": null,
    "description": "should do get call without options",
    "lineNumber": 1840,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listWebhookNotifications}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listWebhookNotifications"
    ]
  },
  {
    "__docId__": 278,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it160",
    "testId": 160,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe157",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe157.it160",
    "access": null,
    "description": "should handle 204 return",
    "lineNumber": 1849,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#listWebhookNotifications}"
      }
    ],
    "testTargets": [
      "Hyperwallet#listWebhookNotifications"
    ]
  },
  {
    "__docId__": 279,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe161",
    "testId": 161,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe161",
    "access": null,
    "description": "getWebhookNotification",
    "lineNumber": 1869
  },
  {
    "__docId__": 280,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it162",
    "testId": 162,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe161",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe161.it162",
    "access": null,
    "description": "should throw error if webhookToken is missing",
    "lineNumber": 1885,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getWebhookNotification}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getWebhookNotification"
    ]
  },
  {
    "__docId__": 281,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it163",
    "testId": 163,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe161",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe161.it163",
    "access": null,
    "description": "should do get call if webhookToken is provided",
    "lineNumber": 1891,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Hyperwallet#getWebhookNotification}"
      }
    ],
    "testTargets": [
      "Hyperwallet#getWebhookNotification"
    ]
  },
  {
    "__docId__": 282,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe164",
    "testId": 164,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe164",
    "access": null,
    "description": "addProgramToken()",
    "lineNumber": 1904
  },
  {
    "__docId__": 283,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it165",
    "testId": 165,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe164",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe164.it165",
    "access": null,
    "description": "should do nothing if no data is provided",
    "lineNumber": 1905
  },
  {
    "__docId__": 284,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it166",
    "testId": 166,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe164",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe164.it166",
    "access": null,
    "description": "should do nothing if no programToken is set",
    "lineNumber": 1914
  },
  {
    "__docId__": 285,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it167",
    "testId": 167,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe164",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe164.it167",
    "access": null,
    "description": "should do nothing if programToken is set in data",
    "lineNumber": 1923
  },
  {
    "__docId__": 286,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it168",
    "testId": 168,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe164",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe164.it168",
    "access": null,
    "description": "should add programToken if no programToken is set in data",
    "lineNumber": 1933
  },
  {
    "__docId__": 287,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe169",
    "testId": 169,
    "memberof": "test/Hyperwallet.spec.js~describe0",
    "testDepth": 1,
    "longname": "test/Hyperwallet.spec.js~describe0.describe169",
    "access": null,
    "description": "handle204Response()",
    "lineNumber": 1944
  },
  {
    "__docId__": 288,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it170",
    "testId": 170,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe169",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe169.it170",
    "access": null,
    "description": "should return a 'function' with a argument",
    "lineNumber": 1945
  },
  {
    "__docId__": 289,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it171",
    "testId": 171,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe169",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe169.it171",
    "access": null,
    "description": "should do nothing for errors",
    "lineNumber": 1949
  },
  {
    "__docId__": 290,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it172",
    "testId": 172,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe169",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe169.it172",
    "access": null,
    "description": "should do nothing for non 204 responses",
    "lineNumber": 1968
  },
  {
    "__docId__": 291,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it173",
    "testId": 173,
    "memberof": "test/Hyperwallet.spec.js~describe0.describe169",
    "testDepth": 2,
    "longname": "test/Hyperwallet.spec.js~describe0.describe169.it173",
    "access": null,
    "description": "should return empty list for 204 responses",
    "lineNumber": 1987
  },
  {
    "__docId__": 292,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/utils/ApiClient.spec.js",
    "memberof": null,
    "longname": "test/utils/ApiClient.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai, { expect } from \"chai\";\nimport dirtyChai from \"dirty-chai\";\nimport nock from \"nock\";\n\nimport ApiClient from \"../../src/utils/ApiClient\";\n\nimport packageJson from \"../../package.json\";\n\nchai.should();\nchai.use(dirtyChai);\n\n/** @test {ApiClient} */\ndescribe(\"utils/ApiClient\", () => {\n    /** @test {ApiClient#constructor} */\n    describe(\"constructor()\", () => {\n        /** @test {ApiClient#constructor} */\n        it(\"should set provided values as private members\", () => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n\n            client.username.should.be.equal(\"test-username\");\n            client.password.should.be.equal(\"test-password\");\n            client.server.should.be.equal(\"test-server\");\n        });\n\n        /** @test {ApiClient#constructor} */\n        it(\"should set the version to package.json version\", () => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n            client.version.should.be.equal(packageJson.version);\n        });\n    });\n\n    /** @test {ApiClient#doPost} */\n    describe(\"doPost()\", () => {\n        let client;\n        let authHeader;\n\n        before(() => {\n            nock.disableNetConnect();\n        });\n        after(() => {\n            nock.enableNetConnect();\n        });\n\n        beforeEach(() => {\n            client = new ApiClient(\"test-username\", \"test-password\", \"https://test-server\");\n\n            authHeader = \"Basic dGVzdC11c2VybmFtZTp0ZXN0LXBhc3N3b3Jk\";\n        });\n        afterEach(() => {\n            nock.cleanAll();\n        });\n\n        /** @test {ApiClient#doPost} */\n        it(\"should return response if call was successful (with query parameters)\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .matchHeader(\"Content-Type\", \"application/json\")\n                .post(\"/rest/v3/test\", {\n                    test: \"value\",\n                })\n                .query({ sort: \"test\" })\n                .reply(201, {\n                    response: \"value\",\n                });\n\n            client.doPost(\"test\", { test: \"value\" }, { sort: \"test\" }, (err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.deep.equal({\n                    response: \"value\",\n                });\n\n                res.status.should.be.equal(201);\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doPost} */\n        it(\"should return response if call was successful (without query parameters)\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .matchHeader(\"Content-Type\", \"application/json\")\n                .post(\"/rest/v3/test\", {\n                    test: \"value\",\n                })\n                .reply(201, {\n                    response: \"value\",\n                });\n\n            client.doPost(\"test\", { test: \"value\" }, {}, (err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.deep.equal({\n                    response: \"value\",\n                });\n\n                res.status.should.be.equal(201);\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doPost} */\n        it(\"should return generic network error if no response was send by server\", (cb) => {\n            client.doPost(\"test\", { test: \"value\" }, {}, (err, body, res) => {\n                err.should.be.deep.equal([{\n                    message: \"Could not communicate with https://test-server\",\n                    code: \"COMMUNICATION_ERROR\",\n                }]);\n\n                expect(body).to.be.undefined();\n                expect(res).to.be.undefined();\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doPost} */\n        it(\"should return error message if responses contains error\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .matchHeader(\"Content-Type\", \"application/json\")\n                .post(\"/rest/v3/test\", {\n                    test: \"value\",\n                })\n                .reply(404, {\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n\n            client.doPost(\"test\", { test: \"value\" }, {}, (err, body, res) => {\n                err.should.be.deep.equal([\n                    \"test1\",\n                    \"test2\",\n                ]);\n\n                body.should.be.deep.equal({\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n\n                res.status.should.be.equal(404);\n\n                cb();\n            });\n        });\n    });\n\n    /** @test {ApiClient#doPut} */\n    describe(\"doPut()\", () => {\n        let client;\n        let authHeader;\n\n        before(() => {\n            nock.disableNetConnect();\n        });\n        after(() => {\n            nock.enableNetConnect();\n        });\n\n        beforeEach(() => {\n            client = new ApiClient(\"test-username\", \"test-password\", \"https://test-server\");\n\n            authHeader = \"Basic dGVzdC11c2VybmFtZTp0ZXN0LXBhc3N3b3Jk\";\n        });\n        afterEach(() => {\n            nock.cleanAll();\n        });\n\n        /** @test {ApiClient#doPut} */\n        it(\"should return response if call was successful (with query parameters)\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .matchHeader(\"Content-Type\", \"application/json\")\n                .put(\"/rest/v3/test\", {\n                    test: \"value\",\n                })\n                .query({ sort: \"test\" })\n                .reply(200, {\n                    response: \"value\",\n                });\n\n            client.doPut(\"test\", { test: \"value\" }, { sort: \"test\" }, (err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.deep.equal({\n                    response: \"value\",\n                });\n\n                res.status.should.be.equal(200);\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doPut} */\n        it(\"should return response if call was successful (without query parameters)\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .matchHeader(\"Content-Type\", \"application/json\")\n                .put(\"/rest/v3/test\", {\n                    test: \"value\",\n                })\n                .reply(200, {\n                    response: \"value\",\n                });\n\n            client.doPut(\"test\", { test: \"value\" }, {}, (err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.deep.equal({\n                    response: \"value\",\n                });\n\n                res.status.should.be.equal(200);\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doPut} */\n        it(\"should return generic network error if no response was send by server\", (cb) => {\n            client.doPut(\"test\", { test: \"value\" }, {}, (err, body, res) => {\n                err.should.be.deep.equal([{\n                    message: \"Could not communicate with https://test-server\",\n                    code: \"COMMUNICATION_ERROR\",\n                }]);\n\n                expect(body).to.be.undefined();\n                expect(res).to.be.undefined();\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doPut} */\n        it(\"should return error message if responses contains error\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .matchHeader(\"Content-Type\", \"application/json\")\n                .put(\"/rest/v3/test\", {\n                    test: \"value\",\n                })\n                .reply(404, {\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n\n            client.doPut(\"test\", { test: \"value\" }, {}, (err, body, res) => {\n                err.should.be.deep.equal([\n                    \"test1\",\n                    \"test2\",\n                ]);\n\n                body.should.be.deep.equal({\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n\n                res.status.should.be.equal(404);\n\n                cb();\n            });\n        });\n    });\n\n    /** @test {ApiClient#doGet} */\n    describe(\"doGet()\", () => {\n        let client;\n        let authHeader;\n\n        before(() => {\n            nock.disableNetConnect();\n        });\n        after(() => {\n            nock.enableNetConnect();\n        });\n\n        beforeEach(() => {\n            client = new ApiClient(\"test-username\", \"test-password\", \"https://test-server\");\n\n            authHeader = \"Basic dGVzdC11c2VybmFtZTp0ZXN0LXBhc3N3b3Jk\";\n        });\n        afterEach(() => {\n            nock.cleanAll();\n        });\n\n        /** @test {ApiClient#doGet} */\n        it(\"should return response if call was successful (with query parameters)\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .get(\"/rest/v3/test\")\n                .query({ sort: \"test\" })\n                .reply(200, {\n                    response: \"value\",\n                });\n\n            client.doGet(\"test\", { sort: \"test\" }, (err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.deep.equal({\n                    response: \"value\",\n                });\n\n                res.status.should.be.equal(200);\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doGet} */\n        it(\"should return response if call was successful (without query parameters)\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .get(\"/rest/v3/test\")\n                .reply(200, {\n                    response: \"value\",\n                });\n\n            client.doGet(\"test\", {}, (err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.deep.equal({\n                    response: \"value\",\n                });\n\n                res.status.should.be.equal(200);\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doGet} */\n        it(\"should return generic network error if no response was send by server\", (cb) => {\n            client.doGet(\"test\", {}, (err, body, res) => {\n                err.should.be.deep.equal([{\n                    message: \"Could not communicate with https://test-server\",\n                    code: \"COMMUNICATION_ERROR\",\n                }]);\n\n                expect(body).to.be.undefined();\n                expect(res).to.be.undefined();\n\n                cb();\n            });\n        });\n\n        /** @test {ApiClient#doGet} */\n        it(\"should return error message if responses contains error\", (cb) => {\n            nock(\"https://test-server\")\n                .matchHeader(\"Authorization\", authHeader)\n                .matchHeader(\"User-Agent\", `Hyperwallet Node SDK v${packageJson.version}`)\n                .matchHeader(\"Accept\", \"application/json\")\n                .get(\"/rest/v3/test\")\n                .reply(404, {\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n\n            client.doGet(\"test\", {}, (err, body, res) => {\n                err.should.be.deep.equal([\n                    \"test1\",\n                    \"test2\",\n                ]);\n\n                body.should.be.deep.equal({\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n\n                res.status.should.be.equal(404);\n\n                cb();\n            });\n        });\n    });\n\n    describe(\"wrapCallback()\", () => {\n        it(\"should return a 'function' without a argument\", () => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n\n            client.wrapCallback().should.be.a(\"function\");\n        });\n\n        it(\"should return a 'function' with a argument\", () => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n\n            client.wrapCallback(() => null).should.be.a(\"function\");\n        });\n\n        it(\"should be able to run without any arguments\", () => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n            client.wrapCallback()(new Error());\n        });\n\n        it(\"should call callback with 'body' and 'res' if no error happened\", (cb) => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n\n            const rawRes = {\n                body: \"test\",\n                status: 200,\n            };\n\n            const callback = client.wrapCallback((err, body, res) => {\n                expect(err).to.be.undefined();\n\n                body.should.be.equal(\"test\");\n                rawRes.should.be.deep.equal(res);\n\n                cb();\n            });\n            callback(undefined, rawRes);\n        });\n\n        it(\"should call callback with 'errors', 'body' and 'res' if 'body' contains errors\", (cb) => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n\n            const rawRes = {\n                body: {\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                },\n                status: 404,\n            };\n\n            const callback = client.wrapCallback((err, body, res) => {\n                err.should.be.deep.equal([\"test1\", \"test2\"]);\n                body.should.be.deep.equal({\n                    errors: [\n                        \"test1\",\n                        \"test2\",\n                    ],\n                });\n                rawRes.should.be.deep.equal(res);\n\n                cb();\n            });\n            callback(new Error(), rawRes);\n        });\n\n        it(\"should call callback with static error message as 'errors', 'body' and 'res' if 'body' contains no errors\", (cb) => {\n            const client = new ApiClient(\"test-username\", \"test-password\", \"test-server\");\n\n            const rawRes = {\n                body: \"test\",\n                status: 404,\n            };\n\n            const callback = client.wrapCallback((err, body, res) => {\n                err.should.be.deep.equal([{\n                    message: \"Could not communicate with test-server\",\n                    code: \"COMMUNICATION_ERROR\",\n                }]);\n                body.should.be.equal(\"test\");\n                rawRes.should.be.deep.equal(res);\n\n                cb();\n            });\n            callback(new Error(), rawRes);\n        });\n    });\n});\n"
  },
  {
    "__docId__": 293,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe174",
    "testId": 174,
    "memberof": "test/utils/ApiClient.spec.js",
    "testDepth": 0,
    "longname": "test/utils/ApiClient.spec.js~describe174",
    "access": null,
    "description": "utils/ApiClient",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient}"
      }
    ],
    "testTargets": [
      "ApiClient"
    ]
  },
  {
    "__docId__": 294,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe175",
    "testId": 175,
    "memberof": "test/utils/ApiClient.spec.js~describe174",
    "testDepth": 1,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe175",
    "access": null,
    "description": "constructor()",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#constructor}"
      }
    ],
    "testTargets": [
      "ApiClient#constructor"
    ]
  },
  {
    "__docId__": 295,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it176",
    "testId": 176,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe175",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe175.it176",
    "access": null,
    "description": "should set provided values as private members",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#constructor}"
      }
    ],
    "testTargets": [
      "ApiClient#constructor"
    ]
  },
  {
    "__docId__": 296,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it177",
    "testId": 177,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe175",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe175.it177",
    "access": null,
    "description": "should set the version to package.json version",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#constructor}"
      }
    ],
    "testTargets": [
      "ApiClient#constructor"
    ]
  },
  {
    "__docId__": 297,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe178",
    "testId": 178,
    "memberof": "test/utils/ApiClient.spec.js~describe174",
    "testDepth": 1,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe178",
    "access": null,
    "description": "doPost()",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPost}"
      }
    ],
    "testTargets": [
      "ApiClient#doPost"
    ]
  },
  {
    "__docId__": 298,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it179",
    "testId": 179,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe178",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe178.it179",
    "access": null,
    "description": "should return response if call was successful (with query parameters)",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPost}"
      }
    ],
    "testTargets": [
      "ApiClient#doPost"
    ]
  },
  {
    "__docId__": 299,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it180",
    "testId": 180,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe178",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe178.it180",
    "access": null,
    "description": "should return response if call was successful (without query parameters)",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPost}"
      }
    ],
    "testTargets": [
      "ApiClient#doPost"
    ]
  },
  {
    "__docId__": 300,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it181",
    "testId": 181,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe178",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe178.it181",
    "access": null,
    "description": "should return generic network error if no response was send by server",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPost}"
      }
    ],
    "testTargets": [
      "ApiClient#doPost"
    ]
  },
  {
    "__docId__": 301,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it182",
    "testId": 182,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe178",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe178.it182",
    "access": null,
    "description": "should return error message if responses contains error",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPost}"
      }
    ],
    "testTargets": [
      "ApiClient#doPost"
    ]
  },
  {
    "__docId__": 302,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe183",
    "testId": 183,
    "memberof": "test/utils/ApiClient.spec.js~describe174",
    "testDepth": 1,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe183",
    "access": null,
    "description": "doPut()",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPut}"
      }
    ],
    "testTargets": [
      "ApiClient#doPut"
    ]
  },
  {
    "__docId__": 303,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it184",
    "testId": 184,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe183",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe183.it184",
    "access": null,
    "description": "should return response if call was successful (with query parameters)",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPut}"
      }
    ],
    "testTargets": [
      "ApiClient#doPut"
    ]
  },
  {
    "__docId__": 304,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it185",
    "testId": 185,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe183",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe183.it185",
    "access": null,
    "description": "should return response if call was successful (without query parameters)",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPut}"
      }
    ],
    "testTargets": [
      "ApiClient#doPut"
    ]
  },
  {
    "__docId__": 305,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it186",
    "testId": 186,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe183",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe183.it186",
    "access": null,
    "description": "should return generic network error if no response was send by server",
    "lineNumber": 237,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPut}"
      }
    ],
    "testTargets": [
      "ApiClient#doPut"
    ]
  },
  {
    "__docId__": 306,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it187",
    "testId": 187,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe183",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe183.it187",
    "access": null,
    "description": "should return error message if responses contains error",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doPut}"
      }
    ],
    "testTargets": [
      "ApiClient#doPut"
    ]
  },
  {
    "__docId__": 307,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe188",
    "testId": 188,
    "memberof": "test/utils/ApiClient.spec.js~describe174",
    "testDepth": 1,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe188",
    "access": null,
    "description": "doGet()",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doGet}"
      }
    ],
    "testTargets": [
      "ApiClient#doGet"
    ]
  },
  {
    "__docId__": 308,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it189",
    "testId": 189,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe188",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe188.it189",
    "access": null,
    "description": "should return response if call was successful (with query parameters)",
    "lineNumber": 310,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doGet}"
      }
    ],
    "testTargets": [
      "ApiClient#doGet"
    ]
  },
  {
    "__docId__": 309,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it190",
    "testId": 190,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe188",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe188.it190",
    "access": null,
    "description": "should return response if call was successful (without query parameters)",
    "lineNumber": 335,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doGet}"
      }
    ],
    "testTargets": [
      "ApiClient#doGet"
    ]
  },
  {
    "__docId__": 310,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it191",
    "testId": 191,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe188",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe188.it191",
    "access": null,
    "description": "should return generic network error if no response was send by server",
    "lineNumber": 359,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doGet}"
      }
    ],
    "testTargets": [
      "ApiClient#doGet"
    ]
  },
  {
    "__docId__": 311,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it192",
    "testId": 192,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe188",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe188.it192",
    "access": null,
    "description": "should return error message if responses contains error",
    "lineNumber": 374,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ApiClient#doGet}"
      }
    ],
    "testTargets": [
      "ApiClient#doGet"
    ]
  },
  {
    "__docId__": 312,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe193",
    "testId": 193,
    "memberof": "test/utils/ApiClient.spec.js~describe174",
    "testDepth": 1,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193",
    "access": null,
    "description": "wrapCallback()",
    "lineNumber": 407
  },
  {
    "__docId__": 313,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it194",
    "testId": 194,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe193",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193.it194",
    "access": null,
    "description": "should return a 'function' without a argument",
    "lineNumber": 408
  },
  {
    "__docId__": 314,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it195",
    "testId": 195,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe193",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193.it195",
    "access": null,
    "description": "should return a 'function' with a argument",
    "lineNumber": 414
  },
  {
    "__docId__": 315,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it196",
    "testId": 196,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe193",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193.it196",
    "access": null,
    "description": "should be able to run without any arguments",
    "lineNumber": 420
  },
  {
    "__docId__": 316,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it197",
    "testId": 197,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe193",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193.it197",
    "access": null,
    "description": "should call callback with 'body' and 'res' if no error happened",
    "lineNumber": 425
  },
  {
    "__docId__": 317,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it198",
    "testId": 198,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe193",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193.it198",
    "access": null,
    "description": "should call callback with 'errors', 'body' and 'res' if 'body' contains errors",
    "lineNumber": 444
  },
  {
    "__docId__": 318,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it199",
    "testId": 199,
    "memberof": "test/utils/ApiClient.spec.js~describe174.describe193",
    "testDepth": 2,
    "longname": "test/utils/ApiClient.spec.js~describe174.describe193.it199",
    "access": null,
    "description": "should call callback with static error message as 'errors', 'body' and 'res' if 'body' contains no errors",
    "lineNumber": 472
  }
]